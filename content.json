{"meta":{"title":"ciey blog","subtitle":"","description":"ciey‘s blog","author":"ciey","url":"https://ciey.top","root":"/"},"pages":[{"title":"tags","date":"2018-10-23T07:27:40.000Z","updated":"2025-02-20T07:11:07.413Z","comments":true,"path":"tags/index.html","permalink":"https://ciey.top/tags/index.html","excerpt":"","text":""},{"title":"关于我","date":"2025-02-20T07:00:00.000Z","updated":"2025-02-20T08:34:21.088Z","comments":true,"path":"about/index.html","permalink":"https://ciey.top/about/index.html","excerpt":"","text":"早期启蒙的隐喻性依稀记得90年代有台小霸王学习机承载了多少欢乐的童年时光。卡带插上，游戏启动，那就是最初的编程启蒙嘛。或许正是这种在游戏语境里窥见代码魔力的反差体验，塑造了最初的创造欲。后面接触的初代PSP，着实让人着迷，感叹于精美的画质竟能在小小的掌机上玩，要知道那时候手机还停留在nokia时代。 大学时期，当我用人生第一台笔记本电脑敲下第一个C语言程序时，仿佛打开了新世界的大门。尤其难忘的是用VC++开发的处女作——Lite MP4 Tool，这款基于x264编码器的视频压缩工具，成功将笨拙的高清视频驯服成小巧的MP4文件。当亲手编写的代码真正产生实用价值时，那种兴奋感至今记忆犹新。 技术栈演进的先进性初入职场，最早接触的是.NET C#，主要因为公司项目上一直沿用.NET技术栈。不得不说.NET确实在开发效率上表现不错，尤其适合小型项目，既节省成本又高效。FineUI即是WebForm快速开发的典范。 而后尝试接触了Node.js，相比早期的ASP.NET技术栈，Node.js在各个方面都显得更加灵活高效。NodeExpressAdmin是JS全栈浪潮的典型产物，可视为这种范式转换的实践注脚（欢迎大家star）。 项目管理的辩证性项目管理作为程序猿进阶转型的下一站，既是机遇也是挑战。项目管理实则是在更高维度实践「系统构建」——当代码逻辑升维为甘特图与WBS分解，需求分析转化为干系人博弈的艺术，这种从具体语法到抽象架构本质上是将代码重构能力升维为组织资源的抽象建模。PMP、信息系统项目管理师等证书则恰似这个新领域的「编译器」，将经验转化为可复用的方法论。后续也会将经验和心得分享给大家！","author":"ciey"},{"title":"工具","date":"2018-10-23T07:27:40.000Z","updated":"2025-02-20T07:14:39.566Z","comments":true,"path":"tools/index.html","permalink":"https://ciey.top/tools/index.html","excerpt":"","text":""},{"title":"categories","date":"2018-10-23T07:27:40.000Z","updated":"2025-02-20T07:11:42.988Z","comments":true,"path":"categories/index.html","permalink":"https://ciey.top/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"项目风险管理论文范文","slug":"on-project-risk-management","date":"2023-04-25T12:00:00.000Z","updated":"2025-02-21T06:36:57.438Z","comments":true,"path":"2023/04/25/on-project-risk-management/","permalink":"https://ciey.top/2023/04/25/on-project-risk-management/","excerpt":"","text":"2021年11月，我作为项目经理参加了某市城市智联算法运营中心项目，该项目是由市大数据局发起的，项目投资总额1840万，建设周期一年。该项目是在原有平安城市、雪亮工程建设基础上通过整合全市公共视频接入，利用云计算、视频AI、算法仓库等技术建立了全市统一的城市视频算法能力平台， 进一步挖掘了城市公共视频资源价值，有效提升了城市运行管理和社会治理水平。 该系统整体采用三级分层架构体系，分为视频接入中心、算法能力中心、共享中心。其中视频接入中心为汇聚接入全市各类公共视频资源，算法能力中心通过通用CPU、GPU等服务器资源为视频处理、视频AI提供算力保障，并采用flink流处理技术提供实时处理能力。共享中心为应用层，平台软件基于SprinBoot和vue，前后端分离技术，数据库采用MySQL、PostgreSQL，平台主要面向各委办局提供视频广场、算法超市、事件订阅等功能，其中常见的算法有非机动车违停、占道经营、垃圾满溢等，目前算法中心已汇聚视频资源20万路，已上架213种算法，并产出事件15万余条。 项目得到了我司副总的大力支持，为公司重大项目，采用项目型组织结构，并纳入PMO管理。由于系统涉及软硬件，功能复杂，部分功能涉及新技术，不可控因素多，任务重，工期紧，干系人多，协调难度大，造成了项目的风险因素较多。为保证项目能按时按质完成，我高度重视项目管理工作，在保证其余子管理领域正常开展的前提下，重点对风险进行管理，我带领项目团队通过规划风险管理，综合使用风险识别技术识别系统的潜在风险，对识别的风险进行定性和定量分析，做好规划风险应对以及控制风险等工作，保障了项目工作有条不絮地进行。下面我以本项目为例，从风险管理的几个过程对风险管理进行论述。 一、规划风险管理 规划风险管理，是为了识别、分析、应对和控制风险提供指南和方向。在该项目中，我们前期就开展了规划风险管理工作，参照项目章程、项目管理计划、干系人登记册等资料，邀请了甲方信息中心张主任和团队成员，以专题会的形式，共同制定了本项目的风险管理计划，包括：1、成立风险管理领导小组和执行小组，明确风险职责人；2、选定风险管理使用的方法、工具；3、风险类别；4、时间安排，每周一次内部风险评审会，每月一次外部风险审计会；5、为成本、进度预留了风险储备金，缓冲期等内容。将风险管理计划纳入项目管理计划中，并评审通过了该计划。 二、识别风险 识别风险是确定哪些风险会影响项目并记录其特征的过程。在风险评估会议上，我组织团队成员进行头脑风暴，并访谈了我司一位具有丰富经验的项目总监，以及通过SWOT分析等，我们先后识别出合计26条风险，例如：本系统的视频AI需要较高的算法分析和设计水平，技术要求较高；甲方领导对此项目非常重视，中途可能会有提出需求增改的风险；疫情还不稳定，这可能影响到主机设备无法按时到货……最终我们得到了项目的风险登记册，当然，识别风险是一个反复迭代的过程，需要不断的更新，因此我们按照风险管理计划的安排，定期组织识别风险并更新风险登记册。 附：风险及潜在应对措施清单部分内容如下 编号 风险事项 发生概率 潜在风险应对措施 潜在风险责任人 FX01 视频AI技术要求高，需要较高的算法分析和设计水平 高 向公司申请视频算法高级工程师 王工 FX02 甲方可能中途提出需求增改 高 建立需求变更控制策略和需求变更控制流程；需求规格说明书与用户进行需求确认和评审 李工 FX03 疫情可能影响主机设备无法按时到货 高 与采购专员保持密切沟通，必要时项目保障领导小组张总推进采购进度 孙工 …… …… 三、实施定性风险分析 定性风险分析是对已识别风险通过评估风险发生概率和影响，对风险进行优先级排序。 首先我们将风险发生的概率和影响分为五级，设置对应值，然后邀请专家和相关干系人，评估风险概率和影响数值并计算每个风险值&#x3D;概率*影响，如视频AI技术不成熟风险值为0.28，为高风险，最后通过风险概率和影响矩阵 对各个风险进行了排序。例如视频AI技术不成熟、中途变更需求、主机设备无法按时到货等6条风险作为重点关注的高优先级风险，并更新了风险登记册。 四、实施定量风险分析 定量风险分析是已识别风险对整体项目目标的综合影响进行定量分析，这能够让我们以更科学的数据来做决策。在项目中，我们对重点关注的高优先级风险进行了定量分析，通过关键性分析，以确定哪些风险对项目关键路径影响最大，通过敏感性分析确定哪些风险对项目结果具有最大的潜在影响。经分析主机设备无法按时到货对项目关键路径影响最大，视频AI技术不成熟具有最大潜在影响等。（举例）我们主要使用了决策树方法，进一步从量化的角度确定了不同风险对项目各个阶段的影响程度，并更新了风险登记册。如采购主机设备有三家供应商A&#x2F;B&#x2F;C，及时到货能获利和延迟到货将损失的情况经过决策树分析，最终选择了供应商B供应设备。 五、规划风险应对 规划风险应对是对风险选择应对策略，制定应对方案的过程。 我们对经过定性、定量风险分析后更新的风险登记册进行分析，我和项目团队邀请专家组织讨论了风险应对措施。比如应对技术的风险，采用减轻策略，向公司申请了两名经验丰富的高级工程师；应对中途变更需求的风险我们采用转移策略，在项目合同中明确变更需承担的代价，以转移风险；应对主机无法按时到货的风险，采用减轻策略，与采购专员保持密切沟通，必要时项目保障领导小组张总推进采购进度，在自由浮动时间情况下，确保主机设备及时到货。而对于低优先级风险采用接受策略。 六、实施风险应对 实施风险应对是执行风险应对方案的过程。 根据风险对应的责任人，定期督促他们去实施，确保已商定的风险应对措施得到实际执行。采用专家判断、影响力、项目管理信息系统进行管理执行。只有努力去实施风险应对，才可能把风险降低到可控的范围内。风险责任人小张迟迟没有进行制定，以工作忙进行推脱，我对小张施展影响力，鼓励他采取行动去完成规范和标准的制定。最终小张在我各种劝说鼓励下很快完成了规范和标准的制定，把这些问题纳入到经验教训登记册、问题日志中。 七、监督风险 监督风险是在整个项目周期，监督风险应对计划的实施，跟踪已识别的风险，识别和分析新风险，以及评估风险管理有效性的过程。 我们依据项目管理计划、绩效数据和风险登记册等资料，采取多措施全过程控制风险。如在每周内部风险评估会议上，进行技术绩效测量、偏差和趋势分析，讨论解决方案；在每月外部风险审计会上，以公司领导及甲方有关领导为主，对风险进行审计和再评估，删除过时风险、识别再生风险，例如当主机设备到货后，该条主要风险就可以删除，并适当减少应急储备加强项目资金的流动性。通过全程跟踪，始终将风险掌握在可控制的范围内。 经过我们团队长达一年的不懈努力，本项目终于在2022年11月顺利通过了甲方组织的验收。通过智联算法运营中心的建设，构建了全市视频算法能力平台，促进了社会治理智慧化水平提升，为政府决策指挥提供智慧支持，赢得了各干系人的一致好评。本项目的成功，首先来自于全体团队成员的努力，其实，也得益于我在项目管理中对风险的有效管理：通过事前科学规划、事中严格管理、及时发现偏差解决问题，以及合理地使用一些工具、技术和方法，使风险管理得到了事半功倍的效果。当然，也存在一些不足，比如，部分成员风险意识不足，应客户要求直接修改增加日志搜索功能，以此为案例加强队伍的风险意识，并补走变更控制流程，始终将风险掌握在可控制的范围内。我深知项目管理理论与实践的重要性，将在以后的工作中，不断的加深学习，并在项目中运用总结，为信息化建设贡献一份力量。","categories":[{"name":"项目管理","slug":"项目管理","permalink":"https://ciey.top/categories/%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/"}],"tags":[{"name":"风险管理","slug":"风险管理","permalink":"https://ciey.top/tags/%E9%A3%8E%E9%99%A9%E7%AE%A1%E7%90%86/"}],"author":"ciey"},{"title":"项目资源管理论文范文","slug":"on-project-resource-management","date":"2023-04-23T11:30:00.000Z","updated":"2025-02-20T09:09:08.055Z","comments":true,"path":"2023/04/23/on-project-resource-management/","permalink":"https://ciey.top/2023/04/23/on-project-resource-management/","excerpt":"","text":"2021年11月，我作为项目经理参加了某市城市智联算法运营中心项目，该项目是由市大数据局发起的，项目投资总额1840万，建设周期一年。该项目是在原有平安城市、雪亮工程建设基础上通过整合全市公共视频接入，利用云计算、视频AI、算法仓库等技术建立了全市统一的城市视频算法能力平台，进一步挖掘了城市公共视频资源价值，有效提升了城市运行管理和社会治理水平。 该系统整体采用三级分层架构体系，分为视频接入中心、算法能力中心、共享中心。其中视频接入中心为汇聚接入全市各类公共视频资源，算法能力中心通过通用CPU、GPU等服务器资源为视频处理、视频AI提供算力保障，并采用flink流处理技术提供实时处理能力。共享中心为应用层，平台软件基于SprinBoot和vue，前后端分离技术，数据库采用MySQL、PostgreSQL，平台主要面向各委办局提供视频广场、算法超市、事件订阅等功能，其中常见的算法有非机动车违停、占道经营、垃圾满溢等，目前算法中心已汇聚视频资源20万路，已上架213种算法，并产出事件15万余条。 项目得到了我司副总的大力支持，为公司重大项目，纳入PMO管理。由于系统涉及软硬件，功能复杂，任务重，工期紧，干系人多，协调难度大。为保证项目的顺利完成，我采用项目型组织结构，通过科学有效的项目管理，特别是较为出色的资源管理，项目获得了成功。下面我以本项目为例，从资源管理的几个过程进行论述。 一、规划资源管理 规划资源管理是定义如何估算、获取、管理和利用团队以及实物资源的过程。 本过程的主要作用是根据项目类型和复杂程度确定适用于项目资源的管理方法和管理程度。在系统建设项目实施过程，我组织项目团队依据质量管理计划等文件，利用公司模板，制定了资源管理计划初稿，接着召集项目干系人进行了细化，最后通过专家评审会议制定了一份详尽、科学的资源管理计划，用于指导如何进行创建、建设以及管理项目团队。同时还制定了团队章程，明确了团队价值观、沟通指南、决策标准和过程、冲突处理过程、会议指南和团队共识。 二、估算活动资源 估算活动资源是估算执行项目所需的团队资源，以及材料、设备和用品的类型和数量的过程。 本过程的主要作用是明确完成项目所需的资源种类、数量和特性。在本项目中，我们以组织过程资产、资源日历、项目活动清单及其相关文档为依据，结合以往项目经验，采用自下而上的方法，估算出每个活动所需的人员、设备、材料等资源以及每类资源的数量，并记录在资源需求文件和估算依据文件中(如下图表)。 序号 角色 所需资源 累计计划工作时间(月) 工作量(人月) 1 项目管理人员 1 名 13 13 人月 2 质保人员 2名 13 26人月 3 需求分析师 5名 6 30人月 4 系统设计师 5 名 6 30人月 5 软件工程师 10名 10 100人月 6 测试工程师 10名 6 60人月 7 实施工程师 5名 6 30人月 三、获取资源 获取资源是获取项目所需的团队成员、设施、设备、材料、用品和其他资源的过程。 我根据角色和职责、项目组织结构图，以及人员配备计划等文件，开始着手组建项目团队。首先我和相关的职能部门经理谈判要人，比如向规划设计部要需求分析人员，向软件开发部要开发人员，向质量管理部要质量管理人员。由于公司项目较多，人力资源吃紧，在与各个职能部门经理谈判时候，重点表达了此项目对于公司的重要性，并灵活运用沟通技巧，经过几轮谈判，项目骨干人员基本落实，但是开发人员和测试人员数量不够，经过与人力资源部协调，我们面向社会招聘了几名软件开发人员。另外算法专家不在本地，且由于个人原因不方便和团队成员集中办公，所以建立了虚拟团队的工作方式。接着我们制定了人员的资源日历，项目团队正式组建完成。这个阶段产生了项目团队派工单等文件(如下图表)。 项目名称: 城市智联算法运营中心项目 制表日期: 2021年11月26日 项目负责人： 陈工 分管副总: 张总 序号 姓名 角色 职责 出工日期 收工日期 1 AA 需求分析师 负责调研建设项目系统需求，并分析形成需求文档 2021年12月1日 2021年12月14日 2 BB 系统设计师 协助需求分析师一起调研分析需求，设计系统原型，主要负责根据需求设计功能、界面、数据库等 2021年12月15日 2021年12月28日 … … … … … … 20 CC 软件工程师 主要负责实现按功能设计、界面设计、数据库设计，最终实现系统 2022年1月15日 2022年5月30日 21 DD 测试工程师 配合软件工程师测试系统，并记录反馈问题 2022年2月5日 2022年5月30日 22 EE 质保工作师 协助项目经理，负责项目质量管理工作 2022年3月1日 2022年5月30日 四、建设团队 建设团队是提高工作能力，促进团队成员互动，改善团队整合氛围，以提高项目绩效的过程。 本过程的主要作用是，改进团队协作、增强人际关系技能、激励员工、减少摩擦以及提升整合项目绩效。在本项目中，我们开展了多种形式的业务培训、技能培训和项目管理培训，授课老师既有部门行业专家，相关处室的业务负责人，也有我们项目组的骨干成员。通过各种类型的培训，培养了自己团队的专家，有效的节约了人员成本支出。其次，由于项目成立初期，项目组成员彼此不甚了解，为了打造和谐团结的团队氛围，我特别重视团队建设活动的开展。为了保证项目顺利进行， 我还向公司申请了一个集中办公区。 由于我们团队建设工作做得早，做得到位，项目团队很快度过了震荡期，进入规范期和发挥期。该过程产生的团队绩效评估如下概要图表。 评估人： 评估时间： 序号 评估指标 所属类别 目标得分 实际得分 备注 1 1、完成业绩目标结果导向类 结果导向类 15 15 2 2、如期完成工作数量 结果导向类 15 15 3 3、工作质量达标 结果导向类 15 15 4 4、甲方满意 结果导向类 15 15 5 5、团队整合素质和能力提高 结果导向类 10 10 6 6、团队为实现目标制定了计划 过程导向类 5 5 7 7、团队成员职责分明 过程导向类 10 10 8 8、大家认同团队章程 过程导向类 5 5 9 9、拥有一致认可的价值观 过程导向类 5 5 10 10、成员知道加入团队的益处 过程导向类 5 5 五、管理团队 管理团队是跟踪团队成员工作表现、提供反馈、解决问题并管理团队变更以优化项目绩效的过程。本过程的主要作用是影响团队行为、管理冲突以及解决问题。 在本项目中，我主要采取合作的解决策略，这样比较容易在双赢的模式下较好的解决问题。 比如在对企业一窗办理模块和主体登记业务模块的活融顺序占， 开发小组组长和一名高级工程师意见不一致，问题的焦点在于开发小组长觉得为了达到加快项目进度和充分利用闲置人力资源从而节约人力成本的目的，这两个模块可以并行施工， 而高级工程师则觉得并行施工风险太大。 我将该问题记录下来，召集团队成员一起参与方案讨论设计，召开评审会，逐一分析不同方案的优缺点，并进行反复的测试验证， 最终大家以合作解决问题的态度达成了一致意见，化解了矛盾，还促进了项目团队内部的团结协作。 六、控制资源 控制资源是确保按计划为项目分配实物资源，以及根据资源使用计划监督资源实际使用情况，并采取必要纠正措施的过程。 在企业登记一体化系统建设项目实施过程中，我组织团队成员长期收集分析工作绩效数据以监督工作情况。我通过趋势分析和问题解决等办法，及时对资源启进行分析、预测，对出现的问题进行解决，最后，本项目中涉及到的实物资源：例如办公电脑、打印机、签字笔等设备和用品等均在本项目中得到了适时、适地的使用和释放。 经过我们团队的不懈努力，本项目终于在2022年11月顺利通过了甲方组织的验收。通过智联算法运营中心的建设，构建了全市视频算法能力平台，促进了社会治理智慧化水平提升，为政府决策指挥提供智慧支持，赢得了各干系人的一致好评。本项目的成功，首先来自于全体团队成员的努力，其实，也得益于我在项目管理中对资源的有效管理：通过事前科学规划、事中严格管理、及时发现偏差及时解决，使资源管理得到了事半功倍的效果。 当然，也存在一些不足，比如，受到疫情的影响，项目进度存在一定的延迟。不过经过我及时的纠偏，这些问题得以成功解决。 “纸上得来终觉浅，绝知此事要躬行！” 我深知项目管理理论与实践的重要性，将在以后的工作中，不断的加深学习，并在项目中运用总结，为信息化建设贡献一份力量。","categories":[{"name":"项目管理","slug":"项目管理","permalink":"https://ciey.top/categories/%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/"}],"tags":[{"name":"资源管理","slug":"资源管理","permalink":"https://ciey.top/tags/%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86/"}],"author":"ciey"},{"title":"信息系统项目管理师案例理论及常见问题","slug":"on-project-analysis-of-cases","date":"2023-04-18T11:30:00.000Z","updated":"2025-02-24T09:06:09.893Z","comments":true,"path":"2023/04/18/on-project-analysis-of-cases/","permalink":"https://ciey.top/2023/04/18/on-project-analysis-of-cases/","excerpt":"","text":"一、项目管理概论1、PMO有支持型、控制型和指令型等3种。 类型 具体工作职责 支持型 担当顾问的角色，向项目提供模板、最佳实践、培训，以及来自其他项目的信息和经验教训（低） 控制型 不仅给项目提供支持，而且通过各种手段要求项目服从PMO的管理策略（中） 指令型 直接管理和控制项目（最高） 2、PMO的一个主要职能是通过各种方式向项目经理提供支持，包括:①对PMO所辖全部项目的共享资源进行管理;②识别和制定项目管理方法、最佳实践和标准;③指导、辅导、培训 和监督;④通过项目审计，监督项目对项目管理标准、政策、程序和模板的合规性;⑤制定和管理项目政策、程序、模板及其他共享的文件（组织过程资产）；⑥对跨项目的沟通进行协调等。 二、立项管理1、立项管理常见的问题：（1）立项中请应由（建设方）甲方（非承建方，即乙方）的上级主管单位，而非甲方总经理批准。（2）做完初步可以行研究就立马上马。（3）未做详细可行性研究就生成可行性研究报告（4）可行性研究报告未经评审（5）仅根据项目符合国家政策就判断项目肯定要上马，判断依据过于单一（6）可行性分析的中请金额比中请下来的金额超过了上下10%的浮动，还继续使用，没有重写（7）可行性分析的中请金额比中请下来的金额没超过了上下10%浮动，但没补充内容（8）投标由软件工程师负责不合适，缺少相关经验（专人专事）（9）仅从技术角度分析项目可行不全面，需要综合考虑经济、技术、社会等因素。（10）投标文件不能单独完成，需要比较有经验的各领域专家共同参与编写（11）未编写项目建议书（12）未进行项目评估，或项目评估自己做。（13）没有进行系统的可行性分析，没有进行多方案比较。（14）调研不充分，没有调研大规模应用的案例。（15）没有调研国家政策是否允许。（16）未进行项目论证 2、项目建议与立项申请、初步可行性研究、详细可行性研究、评估与决策是项目投资前时期的四个阶段。 3、立项申请又称为项目建议书，是项目建设单位向上级主管部门提交项目中请时所必须的文件，提出的某一具体项目的建议文件，是对拟建项目提出的框架性总体设想。项目建议书是项目发展周期的初始阶段，是国家或上级主管部门选择项目的依据，也是可行性研究的依据。涉及利用外资的项目，在项目建议书获得批准后，方可开展后续工作。 4、项目建议书应该包括的核心内容有:①项目的必要性；②项目的市场预测；③项目预期成果（如产品方案或服务）的市场预测;④项目建设必需的条件 5、信息系统项目进行可行性研究包括:技术可行性分析、经济可行性分析、社会效益可行性分析、运行环境可行性分析以及其他方面的可行性分析等。 三、整合管理1、整合管理常见问题 过程 常见问题 制定项目章程 1、没有写项目章程，没有颁布。 2、项目经理自己颁布项目章程。 3、项目经理修改项目章程。 4、项目章程授权不够，项目经理没有权限，下面的人不听话。 5、项目章程的内容不完整（关键字:包含，内容有）。 制订项目管理计划 1、项目管理计划没写，直接做事 2、项目管理计划项目经理一个人写 3、项目管理的计划内容不完整（关键字:包含，内容有）。 4、只有初步的项目管理计划 5、项目管理计划没有评审 6、项目经理叫组长写完各分计划后，只是汇总项目管理计划，没有进行整合，协调 7、项目已经变更，计划未更新 8、没做好各子计划的统一协调，可能导致项目计划不符合项目实际情况 9、项目管理计划制定比较简单，不足以支持整个项目对所需过程的指导和管理； 10、项目计划缺少相关分计划，如质量计划、沟通计划等 11、选择的软件开发生命周期模型不适合项目。 执行与指导项目管理工作 1、执行过于随意，没按计划进行 2、公司缺乏对项目的指导和监控。 3、项目经理没人支持，感觉迷茫缺少PMO。 管理项目知识 1、没有管理项目知识 2、没有形成经验教训登记册 3、没有合理运用相关的工具和技术 项目监控和整体变更控制 1、没进行项目监控。 2、没走变更控制程序。 3、变更控制程序缺少部分的步骤。 4、缺少CCB。 5、项目成员不走变更流程，直接修改项目工作内容。 6、变更发生之后，不做处理。（项目经理没尽责） 7、监控不力，（只至才发现时） 2、项目章程记录了关于项目和项目预期交付的产品、服务或成果的高层级信息:①项目目的;②可测量的项目目标和相关的成功标准；③高层级需求、高层级项目描述、边界定义以及主要可交付成果;④整体项目风险;⑤总体里程碑进度计划;⑥预先批准的财务资源;⑦关键干系人名单;⑧项目审批要求（例如，评价项目成功的标准，由谁对项目成功下结论，由谁签署项目结束）:⑨项目退出标准（例如，在何种条件下才能关闭或取消项目或阶段）;⑩委派的项目经理及其职责和职权;⑪发起人或其他批准项目章程的人员的姓名和职权等。【口诀:目的目标需求要描述;风险进度财务干系人要审批;退出两个职权】 3、项目管理计划组件主要包括：♦ 子管理计划:范围管理计划、需求管理计划、进度管理计划、成本管理计划、质量管理计划、资源管理计划、沟通管理计划、风险管理计划、采购管理计划、干系人参与计划。♦ 基准 :范围基准、进度基准和成本基准。♦ 其他组件:变更管理计划、配置管理计划、绩效测量基准、项目生命周期、开发方法、管理审查。 4、配置管理活动 包括:识别配置项、记录并报告配置项状态、进行配置项核实与审计 5、结束项目或阶段过程所需执行的活动包括：♦ 为达到阶段或项目的完工或退出标准所必须的行动和活动；♦ 为关闭项目合同协议或项目阶段合同协议所必须开展的活动；♦ 为完成收集项目或阶段记录、审计项目成败、管理知识分享和传递、总结经验教训、存档项目信息以供组织未来使用等工作所必须开展的活动；♦ 为向下一个阶段，或者向生产和（或）运营部门移交项目的产品、服务或成果所必须开展的行动和活动；♦ 收集关于改进或更新组织政策和程序的建议，并将它们发送给相应的组织部门；♦ 测量干系人的满意程度等。 四、范围管理1、范围管理常见问题 过程 常见问题 规划范围管理 1、没做规划范围管理 2、范围管理计划、需求管理计划是1个人编写的 3、没有进行范围管理计划的评审 4、缺乏项目范围管理的思想 收集需求 1、没做需求收集工作 2、没召开需求评审会，没确认需求 3、没有与各干系人对需求进行详细分析，只是在对客户需求的初步了解后就开始实施。 4、对需求估计不准确，资源估算不足 5、需求评审没有客户参与，可能导致最终对需求不能达成一致，设计文件没有经过正式评审，可能导致设计文件有较多的错误 6、对客户（或用户）的需求获取不充分 定义范围 1、没进行范围定义 2、范围说明书内容不全 3、不能只参照类似项目的范围说明书，需要根据本项目情况进行编写 4、范围说明书没经过评审 5、一个人编写了范围说明书不对 6、闭门造车式地开展需求调研与项目范围说明书的编写工作，没让相关干系人参与进来 创建WBS 1、没进行创建WBS 2、不能单独一人对项目进行分解，而要让项目组成员也参与进来 3、WBS没有经过相关干系人的确认 4、没有编制WBS和WBS词典，以形成权威的范围基准。 5、一个工作只能由1个人负责 6、工作包的大小应该介于8&#x2F;80之间 7、没包含外包出去的模块 8、没包含项目管理工作 9、一个下层属于多个上层了，有交叉从属人力资源管理，选用没用管理经验但专业能力强的人做项目经理，没进行培训。 确认范围 1、没做范围确认 2、范围管理没做好，导致范围出现蔓延 3、范围确认存在问题，导致WBS中定义的功能没有开发 4、WBS最好可以分解到4-6层 控制范围 1、没做好范围控制 2、存在镀金、范围蔓延行为 2、需求方面的问题：（1）对客户（或用户）的需求获取不充分（2）没有按照规范的需求开发与需求管理的流程及内容开展需求工作（3）缺乏需求定义环节，没有定义出需求规格说明书（4）缺乏需求验证环节，没有请客户代表一起进行需求评审（5）没有制定范围和需求管理计划（6）没有求得干系人对需求的一致理解（7）没有求得干系人对需求的承诺（8）没有有效地管理需求变更控制（9）没有有效维护对需求进行跟踪管理（10）没有及时识别项目工作与需求之间的不一致性需求改进措施：（1）建立需求变更控制策略和需求变更控制流程。（2）采用多种方式充分获取用户需求并进行详细的需求分析（3）形成需求规格说明书并与用户进行需求验证（确认）和评审（4）需求定稿建立基线，以后的需求变更必须走变更控制流程，并及时更新需求规格说明书和需求跟踪矩阵（5）编写需求跟踪矩阵，需求状态表等文档（6）在需求规格说明书基础上编制技术方案，并进行评审（7）定期不定期对项目绩效进行监督检查，找出问题原因并指导团队成员解决 3、范围管理计划用于指导如下过程和相关工作:①制定项目范围说明书;②根据详细项目范围说明书创建WBS;③确定如何审批和维护范围基准;④正式验收已完成的项目可交付成果。 4、需求的类别一般包括：业务需求、干系人需求、解决方案需求、过渡和就绪需求、项目需求、质量需求 5、跟踪需求的内容包括:①业务需要、机会、目的和目标;②项目目标;③项目范围和WBS可交付成果；④产品设计;⑤产品开发；⑥测试策略和测试场景;⑦高层级需求到详细需求等。 6、需求踪矩阵中记录的典型属性包括唯一标识、需求的文字描述、收录该需求的理由、所有者、来源、优先级别、版本、当前状态和状态日期。为确保干系人满意，可能需要增加一些补充属性，如稳定性、复杂性和验收标准。 7、详细项目范围说明书内容：产品范围描述、可交付成果、验收标准、项目的除外责任 8、创建WBS的方法多种多样，常用的方法包括自上而下的方法、使用组织特定的指南和使用WBS模板。 9、要把整个项目工作分解为工作包 ，通常需要开展如下活动:①识别和分析可交付成果及相关工作;②确定WBS的结构和编排方法;③自上而下逐层细化分解;④为WBS组成部分制定和分配标识编码;⑤核实可交付成果分解的程度是否恰当 10、WBS的结构可以采用多种形式：（1）以项目生命周期的各阶段作为分解的第二层，把产品和项目可交付成果放在第三层。（2）以主要可交付成果作为分解的第二层。（3）纳入由项目团队以外的组织开发的各种较低层次组件（如外包工作）。随后，作为外包工作的一部分，卖方须制定相应的合同WBS。 11、在分解的过程中，应该注意以下8个方面：（分解原则）（1） WBS必须是面向可交付成果的:项目的目标是提供产品或服务，WBS中的各项工作是为提供可交付的成果服务的。（多次重复循环，软件测试）（2） WBS必须符合项目的范围：WBS必须包括也仅包括为了完成项目的可交付成果的活动。 100%原则（包含原则）认为，在WBS中，所有下一级的元素之和必须100%代表上一级的元素。（3） WBS的底层应该支持计划和控制:WBS是项目管理计划和项目范围之间的桥梁，WBS的底层不但要支持项目管理计划，而且要让管理层能够监视和控制项目的进度和预算。（4） WBS中的元素必须有人负责，而且只有一个人负责。（5） WBS应控制在4〜6层:如果项目规模比较大，以至于WBS要超过6层，此时，可以使用项目分解结构将大项目分解成子项目，然后针对子项目来做WBSo每个级别的WBS将上一级的一个元素分为4〜7个新元素，同一级元素的大小应该相似。一个工作单元只能从属于某个上层单元，避免交叉从属。（6） WBS应包括项目管理工作（因为管理是项目具体工作的一部分），也要包括分包出去的工作。（7） WBS的编制需要所有（主要）项目干系人的参与。（8） WBS并非是一成不变的:完成了 WBS之后的工作中，仍然有可能需要对WBS进行修改。 12、范围基准 ：是经过批准的范围说明书、WBS和相应的WBS词典，只有通过正式的变更控制程。 13、确认范围过程与控制质量过程的不同之处在于，前者关注可交付成果的验收，而后者关注可交付成果的正确性及是否满足质量要求。控制质量过程通常赶确认范围过程，但二者也可同时进行。 14、干系人关注点的不同 干系人 关注重点 管理层 关注项且范围:是指范围对项目的进度、资金和资源的影响，这些因素是否超过了组织承受范围，是否在投入产出上具有合理性 客户 关注产品范围:关心项目的可交付成果是否足够完成产品或服务；在项目中，客户往往有在当前版本中加入所有功能和特征的意愿，这对于项目来说是一种潜在的风险，会给组织和客户带来危害和损失 项目管理人员 主要关注项目制约因素:关心项目可交付成果是否足够和必须完成，时间、资金和资源是否足够，主要的潜在风险和预备解决的方法 项目团队成员 主要关注项目范围中自己参与的元素和负责的元素:通过定义范围中的时间检查自己的工作时间是否足够，自己在项目范围中是否有多项工作 五、进度管理1、进度管理常见问题 过程 常见问题 规划进度管理 1、没进行规划进度管理 2、不能一人来制定进度计划，并且没有从项目实际出发来制定进度计划，而根据合 同规定的时间来制定的进度计划可能不符合项目实际情况 活动定义 1、没进行活动定义 排列活动顺序 1、没进行活动排序 估算活动持续时间 1、没进行历时估算 2、历史估算不准确 制定进度计划 1、没制定进度计划 2、加班会增加成本，影响质量 3、并行工作会增加风险 4、增加资源有时可能压缩工期有限 5、制定进度计划的方法不合理，没有预留一定的缓冲时间。 6、项目进度计划不合理 7、计划未经过评审就付诸实施 8、制定工作计划时，没考虑资源日历，导致有冲突 9、在压缩工期的情况下，没有考虑新增加开发人员的可用性 10、未经过评估情况下随意将原来系统开发时间压缩 11、关键里程碑点没有获得相关干系人的签字确认 控制进度 1、没做进度控制 2、控制进度的工作做得不好 3、缺乏进度管理的思想 2、缩短活动工期方法（1）赶工，投入更多的资源或增加工作时间，以缩短关键活动的工期。（2）快速跟进，并行施工，以缩短关键路径的长度（3）使用高素质的资源或经验更丰富的人员（4）减小活动范围或降低活动要求（5）改进方法或技术，以提高生产效率（6）加强质量管理，及时发现问题，减少返工，从而缩短工期【口诀】赶快使减改为加 如果是成本超支，则答下面7-10条（补充）（7）关注成本超支较严重的工作。（8）对成本的支出进行细化分析，找出成本超支的原因。（9）针对不同的成本超支原因，采取对应的措施。例如:减少不必要的工作、优化工作流程提高效率、削减不必要的资源。（10）定期对项目的成本绩效进行评估，及时按情况进行调整。 3、确定和整合依赖关系 依赖关系类型 解释说明 强制性依赖关系（硬逻辑或硬依赖） 法律或合同要求的或工作的内在性质决定的依赖关系； 例如，在建筑项目中，只有在地基建成后，才能建立地面结构；在电子项目中，必须先把原型制造出来，然后才能对其进行测试（项目团队不能违反） 选择性依赖关系 （软逻辑） 基于最佳实践建立的、或基于项目的某些特殊性质而采用的依赖关系（项目团队可自由选择） 如果打算快速跟进，应当审查相应的选择性依赖关系。 外部依赖关系 项目活动与非项目活动之间的依赖关系，往往不在项目团队的控制范围内。 例如，软件项目的测试活动取决于外部硬件的到货；建筑项目的现场准备，可能要在政府的环境听证会之后才能开始。（项目团队不可控） 内部依赖关系 是项目活动之间的紧前关系，在项目团队的控制之中。例如，只有机器组装完毕，团队才能对其测试。（项目团队可控） 4、进度压缩技术包括:♦ 赶工:是通过增加资源，以最小的成本代价来压缩进度工期的一种技术。 赶工的例子包括: 批准加班、增加额外资源或支付加急费用来加快关键路径上的活动。赶工只适用于那些通过增加资源就能缩短持续时间的且位于关键路径上的活动。但赶工并非总是切实可行的，因它可能导致风险和&#x2F;或成本的增加。 ♦ 快速跟进:将正常情况下按顺序进行的活动或阶段改为至少是部分并行开展。 例如，在大楼的建筑图纸尚未全部完成前就开始建地基。快速跟进可能造成返工和风险增加，所以它只适用于能够通过并行活动来缩短关键路径上的项目工期的情况。若进度加快而使用提前量，通常会增加相关活动之间的协调工作,并增加质量风险。还有可能增加项目成本。 5、资源优化♦ 资源平衡：是为了在资源需求与资源供给之间取得平衡，根据资源制约因素对开始日期和完成日期进行调整的一种技术。如果共享资源或关键资源只在特定时间可用而且数量有限,如一个资源在同一时段内被分配至两个或多个活动，就需要进行资源平衡。也可以为保持资源使用量处于均衡水平而进行资源平衡。资源平衡往往导致关键路径改变。可以用浮动时间平衡资源。♦ 资源平滑：对进度模型中的活动进行调整，从而使项目资源需求不超过预定的资源限制的一种技术。相对于资源平衡而言，资源平滑不会改变项目的关键路径,完工日期也不会延迟。也就是说，活动只在其自由和总浮动时间内延迟，但资源平滑技术可能无法实现所有资源的优化。 6、进度问题解决方法进度落后，成本超支可以采取的措施：（1）用高效人员代替低效人员；（2）加班或赶工在预防风险的情况下并行施工；（3）提高资源利用率；（4）加强、改进沟通，提高效率；（5）尽可能一次性把事情做对，减少返工。（6）加强沟通（6）增强优质资源（7）外包和缩小项目范围进度落后，成本节约可以采取的措施：（1）赶工（例如全体加班方式）加快进度（2）使用高效资源来替换低效资源加快进度（3）改进方法，提高工作效率进度超前，成本超支可以采取的措施：（1）整个项目需要抽出部分人员以放慢工作进度；（2）整个项目存在成本超支现象，需要采取控制成本措施；（3）项目中区分不同的任务，采取不同的成本及进度措施；（4）必要时调整成本基准。（5）优化施工方案、提高效率、加强质量管理减少返工、加强沟通，以降低成本；（6）在确保进度按期完成的基础上，可以降低进度以节约成本；（7）总结项目进度“提前”的经验，并记录下来，把这经验传播到项目的其他班组，甚至其他 项目或未来的项目；进度超前，成本节约可以采取的措施：（1）抽调部分人员用于其他项目（2）加强质量控制，密切监控项目（3）必要时调整计划或基准等方法改进，或者改变相关计划 7、掌握三点估算和完工概率的计算: 均值e(t)=（乐观值+4X最可能值+悲观值）/6 标准差=（悲观值-乐观值）/6 图的含义为：工程在估算工期前后1期间内完工的概率为68%, 在估算工期前后2期间内完工的概率为95%, 估算工期前后3期间内完工的概率为99% 六、成本管理1、成本管理常见的问题: 过程 常见问题 规划成本管理 1、没进行成本规划 2、1个人编写了成本管理计划 3、成本管理计划没经过评审 4、成本管理计划内容不全 估算成本 1、没进行成本估算 2、成本估算不准确 制定预算 1、没进行成本预算 2、成本预算不准确 控制成本 1、没进行成本控制 2、没采用相关工具进行成本控制 3、赶工导致成本超支了 2、成本的类型：（1）可变成本:随着生产量、工作量或时间而变的成本为可变成本。又称变动成本。（2）固定成本:不随生产量、工作量或时间的变化而变化的非重复成本为固定成本。（3）直接成本:直接可以归属于项目工作的成本为直接成本。如项目团队差旅费、工资、项目使用的物料及设备使用费（一个项目承担）（4）间接成本:来自一般管理费用科目或几个项目共同担负的项目成本所分摊给本项目的费用，就形成了项目的间接成本，如税金、额外福利和保卫费用（几个项目分摊）（5）机会成本:是利用一定的时间或资源生产一种商品时，而失去的利用这些资源生产其他最佳替代品的机会就是机会成本，泛指一切在做出选择后其中一个最大的损失。（6）沉没成本:是指由于过去的决策已经发生了的，而不能由现在或将来的任何决策改变的成本。沉没成本是一种历史成本，对现有决策而言是不可控成本，会很大程度上影响人们的行为方式与决策，在投资决策时应排除沉没成本的干扰。 3、成本管理主要是计算题，注意和进度的结合。EV、PV、AC、BAC、CV、SV、EAC、ETC、CPI、SPI公式：CV&#x3D;EV-AC, &gt;0节省; &lt;0超支; SV&#x3D;EV-PV, &gt;0提前; &lt;0滞后CPI&#x3D;EV&#x2F;AC, &gt;1,节省；&lt;1,超支 SPI&#x3D;EV&#x2F;PV, &gt;1,提前；&lt;1,落后ETC&#x3D; （BAC-EV）当前偏差被看做是非典型的ETC&#x3D; （BAC-EV） &#x2F;CPI当前偏差被看做是代表未来的典型偏差EAC&#x3D;AC+ETC—-衍化为下面两个公式EAC&#x3D;AC+BAC-EV当前偏差被看做是非典型的EAC&#x3D;AC+ （BAC-EV） &#x2F;CPI当前偏差被看做是代表未来的典型偏差 4、下图中标示：①SV （进度偏差）;②CV （成本偏差）;③BAC （完工预算）;④VAC （完工偏差） ⑤项目整体拖延日期;⑥项目当前拖延日期 七、质量管理1、项目质量管理可能问题: 过程 常见问题 规划质量管理 1、没有制定可行的质量管理计划并积极实施 2、没有全面的质量管理进展情况报告 3、质量管理计划内容不全 4、在规划质量管理的时候应该同步制订过程改进计划，质量测量指标、质量核对单，并同步更新项目文件 5、对程序员在质量意识和质量管理的培训不足 6、没有严格执行公司完善的质量管理体系； 7、质量职责分配不合理 8、缺少质量标准和质量规范 9、质量管理计划不应由小张一个人制定 10、质量管理计划应经过评审 11、质量管理计划的制定没有考虑项目实际情况 12、质量管理的工具利用比较单一 13、项目经理在项目质量管理方面的经验欠缺 14、体系建设应全员参与，不应由质量部门单独负责体系文件编制 15、体系应结合企业自身特点设计，不能照搬其它公司的文件或经验 16、对团队成员质量意识和质量管理方面的培训不足 管理质量 1、没做质量保证 2、质量保证过程中缺乏QA的参与 3、项目经理用人错误，小李没有质量保证经验 4、QA发现问题应与当事人协商，如果无法达成一致要向项目经理或更高级别的领导汇报，而不能自作主张 5、在质量管理中，没有与合适的技术手段相结合 6、项目经理认为质量管理中他是配合的角色，认识错误 7、公司高层对质量管理认识不足，不重视质量管理 8、没有指定专门的质量管理人员 9、没有建立质量保证体系 10、未审计质量要求和质量控制测量结果 11、质量部门应全程参与项目的质量管理和体系运行，不能只检查结果 12、没有按公司的质量管理体系要求来进行项目的质量管理，团队成员没有质量意识； 13、没有安排专职的项目质量管理人员； 14、没有建立质量保证体系，没有QA或QA不独立于项目组织或经验不足 15、只是凭经验进行检查工作，而没有按质量的标准进行检查 16、在质量检查中发现问题后没有及时解决，没有达到质量检查的效果 控制质量 1、没做质量控制 2、质量控制环节缺失，例如评审和测试 3、测试方法不当或不充分 4、测试控制的流程不对，或未进行质量控制就进行了范围确认 5、应加强项目过程中的质量控制或检查，不能等到工作产品完成后才检查 6、质量控制做得不到位。 7、存在走过场问题，没有深入地评审 8、测试工作中在测试用例、测试方法、测试人员及测试环境等方面存在问题 9、测试过程的阶段安排不合理，软件系统的测试时间不足 10、代码被修改后没有及时进行回归测试并请干系人确认 11、质量控制做的不到位，检查工作颗粒度不一 12、缺少对项目质量管理工作和监督指导 13、测试人员应该纳入项目团队管理，不应该请办公室职员代劳。 2、应该怎么解决或提高项目质量？（1）严格执行公司的质量管理体系规范工作流程；（2）制定质量管理计划；（3）执行质量保证计划；（4）调配相关资源（如：人、财、物等）加强后续质量保证工作；（5）加强后期的质量控制和测试，应安排相对独立的测试人员；（6）提前加强产品交付后的客户服务和维护工作；（7）加强沟通；（8）建议必要时修改质量基准争取以最小的代价获得用户认可。（9）参与开发项目的软件过程描述。评审过程描述用于保证该过程与组织政策、内部软 件标准、外界标准及项目计划的其他部分相符；（10）按质量管理计划实施质量检查，检查是否按标准过程实施项目工作。及时完成项目 过程中的质量检查，在每次进行检查之前应检查清单，并将质量管理相关情况予以记录；（11）依据检查的情况和记录，识别与相应软件开发过程的偏差，分析问题原因，发现尚 可能存在的问题，并与当事人协商，争取解决问题。问题解决后要进行验证，如果无法与当事 人达成一致，应按问题上报流程报告项目经理（或更高级别的领导），直至问题解决：（12）定期给项目干系人分发质量报告；（13）协调变更控制和变更管理，并帮助收集和分析软件度量信息等；（14）为项目组成员提供质量管理要求方面的培训或指导等。（15）强有力的领导（16）建立组织级项目管理体系（17）建立组织级质量管理体系，包括制定可行的过程规范和质量目标、质量标准（18）建立项目级激励制度（19）理解质量成本（20）提高项目文档质量（21）发展和遵从成熟度模型。（22）应安排独立于项目组的有经验的质量保证人员负责质量保证工作（23）对软件开发的过程实施质量审计 （24）注重对需求和设计等开发过程文件的技术评审工作（25）应加强需求和设计方案的评审和质量控制工作（26）应加强项目实施过程中的配置管理工作（27）提出合理有效的质量整改措施（如建议的纠正措施、对项目计划可能的更新等） 3、质量成本 4、质量管理计划内容一般包括:①项目采用的质量标准;②项目的质量目标；③质量角色与职责;④需要质量审查的项目可交付成果和过程;⑤为项目规划的质量控制和质量管理活动;⑥项目使用的质量工具;⑦与项目有关的主要程序，例如处理不符合要求的情况、纠正措施程序以及持续改进程序等。5、管理质量过程执行在项目质量管理计划中所定义的一系列有计划、有系统的行动和过程，有助于:①通过执行有关产品特定方面的设计准则，设计出最优的成熟产品;②建立信心，相信通过质量保证工具和技术（如质量审计和故障分析）可以使未来输出在完工时满足特定的需求和期望;③确保使用质量过程并确保其使用能够满足项目的质量目标;④提高过程和活动的效率与效果，获得更好的成果和绩效并提高干系人的满意度。6、质量审计目标一般包括:①识别全部正在实施的良好及最佳实践;②识别所有违规做法、差距及不足;③分享所在组织和&#x2F;或行业中类似项目的良好实践;④积极、主动地提供协助，以改进过程的执行，从而帮助团队提高生产效率;⑤强调每次审计都应对组织经验教训知识库的积累做出贡献等。7、测试类型：&gt; 软件测试可能包括单元测试、集成测试、黑盒测试、白盒测试、接口测试、回归测试、α测试等；&gt; 硬件开发中，测试可能包括环境应力筛选、老化测试、系统测试等。&gt; 建筑项目中测试可能包括水泥强度测试、混凝土和易性测试，在建筑工地进行的旨在测试硬化混凝土结构的质量无损伤测试，以及土壤试验；8、规划质量管理过程关注工作需要达到的质量，管理质量则关注管理整个项目期间的质量。控制质量关注工作成果与质量要求的比较，确保结果可接受。9、质量与等级的区别。质量与等级是两个不同的概念。质量作例如：（1）一个低等级（功能有限）、高质量（无明显缺陷，用户手册易读）的软件产品，该产品适合一般使用，可以被认可。（2） 一个高等级（功能繁多）、低质量（有许多缺陷，用户手册杂乱无章）的软件产品，该产品的功能会因质量低劣而无效和&#x2F;或低效，不会被使用者接受。 八、资源管理1、资源可能问题: 过程 常见问题 规划资源管理 1、没有规划资源管理 2、资源管理计划项目经理一人制定，没有全员参与 3、资源管理计划内容不全面，有遗漏 4、质量工程师编写资源管理计划是不对的 5、资源管理计划应该各干系人参与，而且还需要经过评审 估算活动资源 1、没有做估算活动资源 2、资源估算过于简单，没有准确估算出项目中的团队资源和实物资源 3、资源估算内容不全 4、由项目经理一人进行资源估算，没有全员参与 5、没有采用合适的工具和技术 获取资源 1、招聘人员时的考核指标不应该仅仅是设备维修经验，还应该注重能力的考查 2、团队成员应该有冗余，防止因事假、病假造成其它成员的超负荷工作 3、人员任命方面存在问题，任命的项目经理虽然研发能力强，但项目管理经验不足 4、成员水平参差不齐，项目团队组建的人员是从各个组别中找出空闲的人员，需要 根据实际情况组建团队 5、用人不当，不应选新毕业生做质量保证 6、缺乏团队领导经验，事必躬亲的做法不对 7、实物资源采购价格过高，没有多方询价对比 8、实物资源获取方式不合理，没有全部获取到 9、获得到的资源种类和数量不全 建设团队 1、没做团队建设 2、团队的组成人员尽管富有才干，但是却很难合作 3、项目团队的职责分配不清楚，没有建立RAM责任矩阵 4、团队的气氛不积极，造成项目团队成员的士气低落 5、人员流动过于频繁 6、兼职过多，精力和时间不够用，顾此失彼 7、没有进入管理角色，定位错误，疏于对项目的管理 8、新人缺乏培训和全程的跟踪和监控 9、项目团队成员能力不足 10、项目经理应该给予必要的帮助和辅导，加快团队成员的成长 11、绩效管理方面存在问题，没有及时对加班成员进行激励 10、团队成员没有明确的考核和评价标准，考核规则不明确，需要明确标准 11、建设团队可能不合理，考虑不充分，导致需要远程办公 12、Y型的管理风格没有与切实可行的规章制度相结合 13、钱某的管理风格没有与直接领导的管理风格相协调。 管理团队 1、没做团队管理 2、没有进行良好的冲突管理 3、项目经理要注重团队绩效和个人绩效的考核，要加强过程的监督和控制 4、项目经理认为团队管理的核心是团队凝聚力强，不发生冲突是错误的，冲突是不可避免的，关键在于如何处理冲突 5、没有协同工作，工位分散导致没有良好的沟通，需要加强协调工作 6、缺乏合理且有激励性的考核方案； 7、绩效奖金分配不合理 8、没做好激励，导致员工士气低落和离职 9、奖励政策没有得到领导的同意 10、王某对于冲突的处理方式过于简单 控制资源 1、没做控制资源 2、没有对资源使用情况进行监控或监控周期过长 3、资源在不再需要时候没有做释放，导致成本超支 4、资源分配不合理 5、出现资源相关问题时没有通知相应干系人 6、没有分析出影响可以导致资源使用变更的因素 7、在变更实际发生时没有对其进行管理或没有走变更流程 2、项目经理的权力有5种来源： 权利类型 解释说明 职位权力 来源于管理者在组织中的则立和职权，高级管理层对项目经理的正式授权 惩罚权力 使用降职、扣薪、惩罚、批评、威胁等负面手段的能力，应谨慎使用 奖励权力 给予下属奖励的能力；奖励包括加薪、升职、福利、休假、礼物、口头表扬、认可度、特殊的任务以及其他的奖励员工满意行为的手段 专家权力 来源于个人的专业技能，来自一线的中层管理者经常具有很大的专家权力 参照权力 由于成为别人学习参照榜样所拥有的力量 职位权力、惩罚权力、奖励权力来自于组织的授权，专家权力和参照权力来自于管理者自身。对于双重汇报关系和非直接汇报关系人员的管理，项目经理更注重运用奖励权力、专家权力和参照权力,尽量避免使用惩罚权力。 3、优秀团队的建设5个阶段： 阶段 解释说明 形成阶段 一个个的个体转变为团队成员，逐渐相互认识并了解项目情况及他们在项目中 的角色与职责，开始形成共同目标 震荡阶段 团队成员开始执行分配的项目任务，一般会遇到超出预想的困难，希望被现实打破。个体之间开始争执，互相指责，并且开始怀疑项目经理的能力 规范阶段 经过一定时间的磨合，团队成员开始协同工作，并调整各自的工作习惯和行为 来支持团队，团队成员开始相互信任，项目经理能够得到团队的认可 发挥阶段 随着相互之间的配合默契和对项目经理的信任加强，团队就像一个组织有序的单位那样工作。团队成员的集体荣誉感会非常强 解散阶段 所有工作完成后，项目结束，团队解散 4、马斯洛的需要层次理论【底层的4种需求即生理、安全、社会交往、受尊重被认为是基本的需求，而自我实现是最高层次的需求】 层次 需求层次 定义 常见的激励措施 1 生理需求 对衣食住行等需求 员工宿舍、工作餐、工作服、班车、工资、 补贴、奖金 2 安全需求 对人身安全、生活稳定、不致失业以及免遭痛苦、威胁或疾病等的需求 养老保险、医疗保障、长期劳动合同、意外保险、失业保险 3 社会交往需求 对友谊、爱情以及隶属关系的需求 定期员工活动、聚会、比赛、俱乐部 4 受尊重需求 自尊心和荣誉感 荣誉性的奖励，形象、地位的提升，颁发奖章，作为导师培训别人 5 自我实现需求 实现自己的潜力，发挥个人能力到最大程度，使自己越来越成为自己所期望的人物 给他更多的空间让他负责、让他成为智囊团、参与决策,参与公司的管理会议 5、X理论：【不好】（1）人天性好逸恶劳，只要有可能就会逃避工作。（2）人生来就以自我为中心，漠视组织的要求。（3）人缺乏进取心，逃避责任，甘愿听从指挥，安于现状，没有创造性。（4）人们通常容易受骗，易受人煽动。（5）人们天生反对改革。（6）人的工作动机就是为了获得经济报酬。 Y理论：【好】 （1）人天生并不是好逸恶劳，他们热爱工作，从工作得到满足感和成就感。（2）外来的控制和处罚对人们实现组织的目标不是一个有效的办法，下属能够自我确定目标，自我指挥和自我控制。（3）在适当的条件下，人们愿意主动承担责任。（4）大多数人具有一定的想象力和创造力。（5）在现代社会中，人们的智慧和潜能只是部分地得到了发挥，如果给予机会，人们喜欢工作，并渴望发挥其才能。 6、资源计划内容：识别资源、获取资源、角色与职责、项目组织图、项目团队资源管理、 培训、团队建设、资源控制、认可计划7、团队章程包括:团队价值观、沟通指南、决策标准和过程、冲突处理过程、会议指南和团队共识8、虚拟团队模式使人们有可能:①在组织内部地处不同地理位置的员工之间组建团队;②为项目团队增加特殊技能，即使相应的专家不在同一地理区域;③将在家办公的员工纳入团队;④在工作班次、工作小时或工作日不同的员工之间组建团队;⑤将行动不便者或残疾人纳入团队;⑥执行那些原本会因差旅费用过高而被搁置或取消的项目；⑦节省员工所需的办公室和所有实物设备的开支等。9、建设项目团队的目标包括:①提高团队成员的知识和技能②提高团队成员之间的信任和认同感;③创建富有生气、凝聚力和协作性的团队文化;④提高团队参与决策的能力。 10、可采用的沟通技术包括：&gt; 共享门户:共享信息库（如网站、协作软件或内部网）对虚拟项目团队很有帮助。&gt; 视频会议:一种可有效地与虚拟团队进行沟通的重要技术。&gt; 音频会议:有助于与虚拟团队建立融洽的相互信任的关系。&gt; 电子邮件&#x2F;聊天软件：使用电子邮件和聊天软件定期沟通也是一种有效的方式。11、5种常用的冲突解决方法：①撤退/回避；②缓和/包容；③妥协/调解；④强迫/命令; ⑤合作/解决问题； 方法类型 解释说明 撤退&#x2F;回避 从实际或潜在冲突中退出，将问题推迟到准备充分的时候，或者将问题推给其他人员解决。 缓和&#x2F;包容 强调一致而非差异;为维持和谐与关系而退让一步，考虑其他方的需要。 妥协&#x2F;调解 为了暂时或部分解决冲突，寻找能让各方都在一定程度上满意的方案，但这种方法有时会导致“双输”局面 强迫&#x2F;命令 以牺牲其他方为代价，推行某一方的观点；只提供赢-输方案。通常是利用权力来强行解决紧急问题，这种方法通常会导致“赢-输”局面。 合作&#x2F;解决问题 综合考虑不同的观点和意见，采用合作的态度和开放式对话引导各方达成共识和承诺，这种方法可以带来双赢局面。 12、控制资源过程关注:①监督资源支出;②及时识别和处理资源缺乏&#x2F;剩余情况;③确保根据计划和项目需求使用并释放资源;④出现资源相关问题时通知相应干系人;⑤影响可以导致资源使用变更的因素;⑥在变更实际发生时对其进行管理等。13、多标准决策分析可使用的选择标准包括:可用性、成本、能力、经验、知识、技能、态度、国际因素。 九、沟通管理1、沟通管理常见问题： 过程 常见问题 规划沟通管理 1、没进行规划沟通管理 2、沟通管理计划不能一人制订 3、沟通管理计划内容不全 4、沟通管理计划完成后没有邀请有关干系人确认、评审 5、制定沟通管理计划没有结合项目实际情况，只参考了以往的文件制定。 6、项目经理对沟通管理经验不足 管理沟通 1、没做管理沟通 2、没有或极少与客户进行直接沟通，合作氛围不够 3、没有对团队成员的沟通需求和沟通风格进行分析 4、沟通方式单一 5、项目执行过程中未能进行及时有效的沟通（或建立有效的沟通机制）6、没有对沟通情况进行记录 7、沟通管理存在问题，导致客户对项目很不满并投诉，并且没有将相关项目绩效数 据发送给项目管理办公室 8、干系人沟通方式单一，只采用电子邮件方式 9、管理沟通不力，对于员工的诉求，应私下解决问题，不应在大会上公开说 10、周报内容不全 11、月度例会粒度太粗 12、项目沟通会不应该由客户召集。 13、会议应该要定时召开，案例中没有明确开会时间。 14、每次开会，不应该临时安排参会人员，应提前通知安排。 15、召开会议前，应提前准备会议议题， 16、开会应当注重效率，不要延伸无关内容 17、未能及时与客户沟通，引起客户不满。 监督沟通 1、没做监督沟通 2、监督沟通工作做得不好，没有对存在的沟通问题及时进行解决 3、与客户发生了争执，沟通管理有问题 4、控制沟通不力，采取强迫手段中止员工的诉求，导致后续的冲突升级 5、与高层沟通不力，未得到高层领导的认同。 6、甲方没有对各部门的需求进行统一的组织和管理 7、缺乏与客户清晰的、统一的接口，与客户沟通不是很有效 8、公司其他职能部门支持或协作不够 9、缺乏良好的沟通能力和沟通技巧 10、对项目干系人的需求了解不细致。 11、项目缺乏阶段沟通与阶段评审。 12、沟通结果未能形成相关记录文件 13、控制沟通过程没有邀请专家参与 14、没有提出变更中请，没有组建CCB变更控制委员会对变更进行确认 15、变更没有书面记录，只是电话通知了变更实施者 16、变更过程中没有监控 2、沟通方法 沟通方法 方法定义 方法举例 互动式沟通 在两方或多方之间进行多向信息交换 会议、电话、即时通信、社交媒体、视频会议 推式沟通 向需要接收信息的特定接收方发送或发布信 息。这种方法可以确保信息的发送，但不能 确保信息送达目标受众或被目标受众理解 信件、备忘录、报告、电子邮件、传真、语音邮件、博客和新闻稿 拉式沟通 用于大量复杂信息或大量信息受众的情况。 它要求接收方在遵守有关安全规定的前提之 下自行访问相关内容 门户网站、组织内网、电子在线课程、经验教训数据库或知识库 3、沟通管理计划内容主要包括:①干系人的沟通需求;②需沟通的信息，包括语言、形式、内容和详细程度;③上报步骤;④发布信息的原因;⑤发布所需信息、确认已收到或作出回应（若适用）的时限和频率;⑥负责沟通相关信息的人员;⑦负责授权保密信息发布的人员;⑧接收信息的人员或群体，包括他们的需要、需求和期望;⑨用于传递信息的方法或技术，如备忘录、电子邮件、新闻稿，或社交媒体;⑩为沟通活动分配的资源，包括时间和预算；⑪随着项目进展（如项目不同阶段干系人社区的变化）而更新与优化沟通管理计划的方法；⑫通用术语表；⑬项目信息流向图、工作流程（可能包含审批程序）、报告清单和会议计划等；⑭来自法律法规、技术、组织政策等的制约因素；⑮关于项目状态会议、项目团队会议、网络会议和电子邮件等的指南和模板；⑯项目网站和项目管理软件4、沟通渠道的总量为n (n-1)/2,其中，n代表干系人的数量 十、干系人管理1、干系人管理常见问题： 过程 常见问题 识别干系人 1、没进行干系人识别 2、干系人识别不全，遗漏了重要干系人 3、独自编制干系人登记册&#x2F;清单不妥 规划干系人管理 1、没进行规划干系人管理 2、干系人参与计划不全 3、干系人参与计划不合理，没有考虑重要干系人 管理干系人参与 1、没做管理干系人参与 监督干系人参与 1、没做控制干系人参与 权力利益方格&#x2F;权力影响方格 基于干系人的职权级别（权力）、对项目成果的关心程度（利益）、对项目成果的影响能力（影响），或改变项目计划或执行的能力 ★权力/利益方格的方法 B区（重点管理、及时汇报一项目的客户和项目经理的主管领导）；C区（随时告知）；A区（令其满意）；D区（化最少的精力来监督他们）； 3、干系人登记册:记录已识别干系人的信息，主要包括：♦ 身份信息:姓名、组织职位、地点、联系方式，以及在项目中扮演的角色。♦ 评估信息:主要需求、期望、影响项目成果的潜力，以及干系人最能影响或冲击的项目生命周期阶段。♦ 干系人分类:用内部或外部，作用、影响、权力或利益，上级、下级、外围或横向，或者项目经理选择的其他分类模型进行分类的结果等。4、干系人参与度评估矩阵：用于将干系人当前参与水平与期望参与水平进行比较①不了解型:不知道项目及其潜在影响。②抵制型:知道项目及其潜在影响，但抵制项目工作或成果可能引发的任何变更。此类干系人不会支持项目工作或项目成果。③中立型:了解项目，但既不支持, 也不反对。④支持型:了解项目及其潜在影响, 并且会支持项目工作及其成果。⑤领导型:了解项目及其潜在影响,而且积极参与以确保项目取得成功。 干系人 不知晓 抵制 中立 支持 领导 干系人1 C D 干系人2 C D 干系人3 DC C代表每个干系人的当前参与水平，而D是项目团队评估出来的、为确保项目成功所必不可少的参与水平（期望的）。应根据每个干系人的当前与期望参与水平的差距，开展必要的沟通，有效引导干系人参与项目。弥合当前与期望参与水平的差距是监督干系人参与中的一项基本工作。 十一、风险管理1、风险管理中存在常见问题 过程 常见问题 规划风险管理 1、没进行规划风险管理 2、风险管理计划编制存在问题，独自一人完成而没有邀请项目组其他成员参与 3、仅仅参照以前的项目模板编制风险管理计划 4、风险管理计划没有经过项目组讨论直接签字下发实施，缺乏沟通，也导致项目中的实际问题与计划的偏差较大。 识别风险 1、没做风险识别 2、不能仅凭个人的经验进行风险识别，而要与项目组成员一起参与。 3、风险识别不够详细，只识别出了主要风险，没有识别出所有风险。 4、识别不全面，风险识别过程应该是反复的过程 5、不仅凭个人的经验进行风险的识别 6、员工缺乏风险意识 7、对项目的风险认识不足 实施定性风险分析 1、没做定性风险分析 2、定性风险风险方法不合理 实施定量风险分析 1、没做定量分析 2、定性风险风险方法不合理 规划风险应对 1、没做风险应对 2、依据自己经验制定应对计划不妥，应依据定性风险分析的风险值开展定量风险分析排序后，制定风险应对计划 实施风险应对 1、没做实施风险应对 2、自己负责各项应对措施不妥，各风险应对措施的实施应责任分配到人 3、风险应对措施制订不合理 监督风险 1、没做风险控制 2、没有处理好外部因素（天气）和内部因素（团队）带来的风险，缺乏有效的应对措施。 3、风险监控做的不好，导致风险没有及时发现。 4、没有进行风险再识别 5、没有进行风险审计 6、风险控制和应对措施都是各成员按各自理解进行安排。应该在充分沟通的前提下统一进行风险应对和管控。 2、风险的可预测性：已知风险、可预测风险、不可预测风险 已知风险 在认真、严格地分析项目及其计划之后就能够明确的那些经常发生的，而且其后果亦可预见的风险 项目目标不明确，过分乐观的进度计划，设计或施工变更和材料价格波动 可预测风险 根据经验，可以预见其发生，但不可预见其后果的风险 业主不能及时审查批准，分包商不能及时交工，施工机械出现故障，不可预见的地质条件 不可预测风险 有可能发生，但其发生的可能性即使最有经验的人亦不能预见的风险，未知风险或未识别的风险 地震、百年不遇的暴雨、通货膨胀和政策变化 3、威胁应对策略 上报、规避、转移、减轻、接受 4、机会应对策略 上报、开拓、分享、提高、接受 5、整体项目风险应对策略 策略 定义 举例 注意点 规避 采取集中行动，弱化不确定性对项目整体的负面影响，并将项目拉回到临界值以内。 取消项目范围中的高风险工 作取消项目（最极端） 适用于整体项目风险有严重负面影响的，并已超出商定的项目风险临界值。 开拓 采取集中行动，去获得不确定性对整体项目的正面影响。 项目范围中增加高收益的工作 与关键干系人协商修改项目风险临界值 适用于整体项目风险有显著正面影响的， 并已超出商定的项目风险临界值。 转移或分享 让第三方代表组织对风险进行管理 负面风险:转移策略，支付费用； 正面风险:多方分享，获得利益； 建立协作式业务结构、成立 合资企业或特殊目的公司、分包关键工作 适用于整体项目风险的级别很高，组织无法有效加以应对。 减轻或提高 变更整体项目风险的级别，以优化实现项目目标的可能性。 重新规划项目、改变项目范 围和边界、调整项目优先级、改变资源配置、调整交付时 间 减轻策略:适用于负面的整体风险 提高策略:适用于正面的整体风险 接受 不主动采取措施，继续按当前的定义推动项目进展。 主动接受健立整体应急储备； 被动接受:记录策略，无需任何其他行动，需要定期复查 适用于无法针对整体项目风险采取主动的应对策略。 6、风险管理计划内容：①风险管理策略；②方法论；③角色与职责；④资金；⑤时间安排； ⑥风险类别；⑦干系人风险偏好；⑧风险概率和影响；⑨概率和影响矩阵；⑩报告格式；⑪跟踪7、SWOT分析：对项目的优势、劣势、机会和威胁（简称SWOT）进行逐个检查8、风险识别阶段风险登记册：已识别风险的清单、潜在风险责任人、潜在风险应对措施清单9、险识别阶段风险报告内容主要包括：（1）整体项目风险的来源；（2）关于已识别单个项目风险的概述信息。 十二、采购和合同管理1、采购管理中存在常见问题 过程 常见问题 规划采购管理 1、没做规划采购 2、未进行充分的自制或外购分析 实施采购 1、没做实施采购 2、在项目采购过程中，项目经理片面相信甲方的推荐，没有真正发挥自身在合同管理中的职责，而在被检查出问题后，又没有能够积极主动地采取措施，而是推卸责任 3、供应商的获取方式存在问题 控制采购 1、控制采购 2、设备到货验收存在问题 3、监督合同的执行过程存在问题 4、控制采购过程中相关文档和往来凭证管理存在问题 5、库房管理（环境等）存在问题 招投标 1、未审核投标代理机构的资质 2、未审核投标方的资质 3、招标过程中修改了招标文件，却只进行了电话沟通 4、选择最低价的并不一定是最好的，可能缺乏完善的评分办法 5、开标时间不符要求。开标应在招标文件确定的截止时间的同一时间公开进行 6、评标专家委员会成员缺少经济、技术类专家，要求是5人以上单数，技术、经济类专家占2&#x2F;3 7、投标文件的密封应有投标人或代表检查，不应由代理机构检查 8、招标未公示 9、中标候选人超过3个 10、中标公示结果少于3天 11、投标截止时间存在问题，依法必须进行招标的项目，自招标文件开始发出之日起至投标人提交投标文件截止之日止，最短不得少于二十日 12、招标代理机构拒绝投标人投标文件修改存在问题，投标人在招标文件要求提交投标文件的截至时间前，可以补充、修改或者撤回已提交的投标文件，并书面通知招标人 13、接受迟到的C公司投标文件存在问题，在招标文件要求提交投标文件的截止时间后送达的投标文件，招标人应当拒收 14、没有对中标候选人进行排名 15、A公司直接决定D公司中标存在问题，招标人应当确定排名第一的中标候选人为中标人 16、A公司公布中标结果，并向D公司发出了中标通知书存在问题，中标人确定后，招标人应当向中标人发出中标通知书，并同时将中标结果通知所有未中标的投标人。 17、B公司向招标代理机构询问中标结果，招标代理机构以保密为由拒绝告知，需要将中标结果通知所有未中标的投标人 18、A公司与D公司签署了商务合同存在问题，招标人和中标人应当自中标通知书发出之日起三十日内，按照招标文件和中标人的投标文件订立书面合同 19、D公司将项目的某重要工作分包给了另一家公司存在问题，只能将非关键、非主体工作进行分包 20、D公司直接分包项目存在问题，中标人需按照合同约定或者经招标人同意。 2、合同管理常见问题：（1）没有做好签订合同之前的调查工作，合同签订过于草率（2）合同没有制定好，缺乏明确清晰的工作说明或更细化的合同条款（3）没有采取措施，确保合同签约双方对合同条款的一致理解（4）合同中缺乏相应的纠纷处理条款（5）对于签订总价合同的风险认识不足（6）合同中可能未对工期、质量和项目目标等关键问题进行约束（7）合同中缺少必要的项目需求描述及违约责任约定（8）合同执行过程中没有做好记录保存工作（或合同档案管理不规范）（9）缺少事先约定的合同变更流程。（10）合同中对项目的维护和保养责任约定不明确，应当明确约定项目的维护责任、期限及相关费用的支付方式（11）合同中对合同履行地没有详细的约定，应当明确约定合同履行地（12）合同条款不严谨，没有就产品的型号、质量等进行严格的约定，合同中的付款条件没有产品质量验收的约束，缺少对合同交付物必要的质量检验和付款条件的把控（13）在项目执行过程中，项目经理发现了问题，没有及时采取措施，对合同进行变更，将可能的影响降到最低（14）合同条款中的验收标准存在问题（15）缺乏合同管理的意识 3、工作说明书会充分详细地描述拟采购的产品、服务或成果，以便潜在卖方确定是否有能力提供此类产品、服务或成果。工作说明书的内容包括:规格、所需数量、质量水平、绩效数据、履约期间、工作地点和其他要求。4、招标文件可以是信息邀请书、报价邀请书、建议邀请书，或其他适当的采购文件。 5、合同的分类: 合同类型 特点、适用范围 总承包合同 买方将项目的全过程作为一个整体发包给同一个卖方的合同。 一般适用于经验丰富、技术实力雄厚且组织管理协调能力强的卖方，这样有利于发挥卖方的专业优势，保证项目的质量和进度，提高投资效益。 单项承包合同 1.一个卖方只承包某一项或某几项内容，买方分别与不同卖方订立的合同。 2.有利于吸引更多卖方参与投标，使买方可以选择在某一单项上实力强的卖方。 分包合同 1.经合同约定和买方认可，卖方将其承包项目的某一部分或某几部分（非项目的主体结构）再发包给具有相应资质条件的分包方，与分包方订立的合同称为项目分包合同。 2.订立项目分包合同必须同时满足5个条件:①经过买方认可;②分包的部分必须是项目非主体工作;③只能分包部分项目，而不能转包整个项目;④分包方必须具备相应的资质条件;⑤分包方不能再次分包 总价合同 ①固定总价合同（FFP）一是最常用的合同类型。大多数买方（甲方）都喜欢这种合同。因为采购的价格在一开始就确定, 范围发生变更）。因合同履行不好而导致的任何并且不允许改变（除非工作成本增加都由卖方承担。 ②总价加激励费用合同（FPIF）—允许一定的绩效偏离,并对实现既定目标给与相关的财务奖励 。要设置价格上限 ,卖方必须完成工作并且要因承担高于上限的全部成本。 ③总价加经济价格调整合同（FPEPA）—适用于：卖方履约期将跨越几年；将以不同货币支付价款。允许，根据条件变化（如通货膨胀、某些特殊商品的成本增降），以事先确定的方式对合同价格进行最终调整。 ④订购单（单边合同）—当非大量采购产品时，可由买方直接填写卖方提供的订购单，卖方照此供货。适用购买标准产品，且数量不大适用工作范围很明确，且项目的设计已具备详细的细节【卖方承担成本风险】 成本补偿合同 ①成本加固定费用合同（CPFF）一为卖方报销履行合同工作所发生的一切可列支成本，并向卖方支付一笔固定费用，该费用以项目初始成本估算的某一百分比计算。 ②成本加激励费用（CPIF）一为卖方报销履行合同工作所发生的一切可列支成本，并在卖方达到合同规定的绩效目标时，向卖方支付预先确定的激励费用。 在CPIF合同下： （1）如果实际成本大于目标成本，卖方可以得到的付款总数为“ 目标成本+目标费用+买方应负担的成本超支” （2）如果实际成本小于目标成本，卖方可以得到的付款总数为“ 目标成本+目标费用-买方应享受的成本节约 ③成本加奖励费用（CPAF）—成本加奖励费用合同为卖方报销履行合同工作所发生的一切合法成本（即成本实报实销），买方再凭自己的主观感觉给卖方支付一笔利润，完全由买方根据自己对卖方绩效的主观判断来决定奖励费用，并且卖方通常无权申诉。适用工作范围尚不清楚【买方承担成本风险】 工料合同 1.指按项目工作所花费的实际工时数和材料数，按事先确定的单位工时费用标准和单位材料费用标准进行付款。计划价格*实际量（量实报实销，激发积极性） 2.适用于工作性质清楚，工作范围比较明确，但具体的工作量无法确定的项目。在金额小、工期短、不复杂的项目上可以有效使用 3.买方承担工作量变动的风险；卖方承担单价风险。 4.是兼具成本补偿合同和总价合同的某些特点的混合型合同。在不能很快编写出准确工作说明书的情况下，经常使用工料合同来增加人员、聘请专家以及寻求其他外部支持。适用工作性质清楚，但范围不是很清楚，而且工作不复杂，又需要快速签订合同【双方分担风险】 7、合同管理包括：合同签订管理、合同履行管理、合同变更管理、合同档案管理、合同违约索赔管理。8、索赔的流程：①提出索赔要求、②报送索赔资料、③监理工程师答复、④监理工程师逾期答复后果、⑤持续索赔、⑥仲裁与诉讼9、熟悉招投标法、政府采购法相关内容10、招投标流程：①招标人采用公开招标方式的，应当发布招标公告一②招标人根据招标项目的具体情况，可以组织潜在投标人踏勘项目现场一③投标人投标一④开标一⑤评标一⑥确定中标人一⑦订立合同。11、政府采购方式有：①公开招标；②邀请招标；③竞争性谈判；④单一来源采购；⑤询价；⑥其他 十三、配置与变更管理1、配置、变更管理问题(1)没编写配置管理计划(2)没进行配置识别(3)没进行配置控制(4)没进行配置状态报告(5)没进行配置审计(6)没进行发布管理与交付(7)修改完成后未进行验证(8)对用户的要求未进行记录(9)对变更的请求未进行足够的分析，也没有获得批准(10)在修改的过程中没有注意进行版本管理(11)项目经理兼任配置管理员，精力不够，无法完成配置管理工作；(12)变更控制委员会组成成员不合理(13)项目中没有建立基线，导致需求、设计、编码无法对应；(14)配置管理计划不应由CCB制定(15)基线变更流程缺少变更验证（或确认）环节(16)对配置管理工具没有进行有效评估(17)没有将变更可能造成的影响告诉变更提出方。应该对变更提出方施加影响，确认变更的必要性，确保变更是有价值的(18)没有对变更实施进行监控，没有对变更作记录并形成文档，造成变更内容无法追溯 (19)直接在受控库中增加修改权限(20)没有统一的版本管理机制，各版本不可追溯，导致重要版本丢失(21)没有对配置库进行很好的分类管理(22)变更管理没有走流程或没有规范的变更流程。(23)项目发生变更时没有及时更新项目计划(24)没有很好的配置管理系统(25)变更结束后要通知相关影响人员，而不仅仅只项目经理确认(26)甲乙两人不能同时修改错误(27)变更没有记录文件(28)开发库与产品库的内容均不完整，且文档更新很不及时(29)项目经理严重缺乏配置管理的意识与经验(30)不能删除配置项(31)配置管理意识不足(32)没编写可行的配置管理方案(34)变更发布应交由CMO完成 2、变更问题与措施常见问题：①未制定标准的变更管理流程；②未书面记录变更；③未充分评估变更影响；④未成立CCB (CCB未包括客户)⑤未及时更新项目管理计划及文件；⑥未及时与干系人沟通; ⑦未验证和监控变更；应对措施：①建立规范的变更控制流程；②书面中请和记录变更；③应充分评估变更影响；④应建立CCB,包含客户等干系人；⑤及时更新项目计划和文件；⑥及时与干系人沟通变更影响和结果；⑦变更后要验证和监控变更； 3、请分析该项目实施过程中存在哪些主要问题。(1)未提交书面变更中请，项目经理没有按照变更管理的流程要求制定变更规则。(2)变更控制委员会组成成员不合理，应该包括客户代表，最好是高级管理人员，并明确分工(3)几乎所有变更都被批准和接受，说明CCB没有严格控制项目变更申请的提交，没有认真审核；(4)应该对变更因素施加影响，积极沟通，确认变更的必要性(5)没有进行变更后的评审，对变更造成的影响没有进行分析。(6)没有将变更可能造成的影响告诉变更提出方(或对应的干系人)。(7)没有严格按照变更控制流程进行变更管理。(8)没有对变更作记录并形成文档，造成变更内容无法追溯。(9)变更批准后，没有及时更新相应的项目计划和文件，导致内容不一致(10)变更结果没有进行正式验证，未得到客户的确认(11)是否接受或拒绝变更，不应该全部由项目经理(或某个人)决定；(12)项目变更后没有相应的变更合同。(13)客户需求发生变化时，应该由项目经理进行变更影响评估，而不是由其他人进行。(14)对于变更请求，任何人不能直接进行修改，应该由CCB (变更控制委员会)决策， 同意修改后，由项目经理安排相关人员进行修改。(15)没有对变更影响作评估以及对变更方案的论证。(16)没有成立CCB (变更控制委员会)。(17)缺乏对变更过程的监控措施。(18)没有对变更的效果作评估。(19)没有变更文件。 4、典型的配置项包括项目计划书、技术解决方案、需求文档、设计文档、源代码、可执行代码、测试用例、运行软件所需的各种数据、设备型号及其关键部件 5、配置项可以分为基线配置项和非基线配置项两类。 基线类型 基线包括 管理原则 基线配置项 所有的设计文档和源程序 向开发人员开放读取的权限 非基线配置项 项目的各类计划和报告 向PM、CCB及相关人员开放 6、配置项的状态可分为“莫稿” “正式”和“修改”三种。配置项刚建立时，其状态为 “草稿” 【0.YZ】。配置项通过评审后，其状态变为“正式”【X.Y】。 此后若更改配置项，则其状态变为“修改”【X.YZ】。当配置项修改完 毕并重新通过评审时，其状态又变为“正式”。 7、配置库可以分开发库、受控库、产品库3种8、配置库的建库模式有两种：按配置项类型建库和按任务建库 9、配置管理相关角色常包括:变更控制委员会（CCB）、配置管理负责人、配置管理员和配置项负责人等。10、配置管理负责人也称配置经理，负责管理和决策整个项目生命周期中的配置活动，具体有：①管理所有活动，包括计划、识别、控制、审计和回顾;②负责配置管理过程;③通过审计过程确保配置管理数据库的准确和真实;④审批配置库或配置管理数据库的结构性变更;⑤定义配置项责任人;⑥指派配置审计员;⑦定义配置管理数据库范围、配置项属性、配置项之间关系和配置项状态;⑧评估配置管理过程并持续改进;⑨参与变更管理过程评估;⑩对项目成员进行配置管理培训。11、配置管理员负责在整个项目生命周期中进行配置管理的主要实施活动，具体有:①建立和维护配置管理系统;②建立和维护配置库或配置管理数据库;③配置项识别;④建立和管理基线;⑤版本管理和配置控制;⑥配置状态报告;⑦配置审计;⑧发布管理和交付。（20下52）12、配置项负责人确保所负责的配置项的准确和真实:①记录所负责配置项的所有变更;②维护配置项之间的关系;③调查审计中发现的配置项差异，完成差异报告;④遵从配置管理过程; ⑤参与配置管理过程评估。13、配置管理的日常管理活动主要包括:制订配置管理计划、配置项识别、配置项控制、配置状态报告、配置审计、配置管理回顾与改进等。14、基于配置库的变更控制，某软件产品升级流程：①将待升级的基线（假设版本号为V2.1）从产品库中取出,放入受控库。②程序员将欲修改的代码段从受控库中检出（Checkout）,放入自己的开发库中进行修改。 代码被Checkout后即被“锁定”，以保证同一段代码只能同时被一个程序员修改，如果甲正对 其修改，乙就无法Checkouto③程序员将开发库中修改好的代码段检入（Checkin）受控库。Checkin后，代码的“锁定” 被解除，其他程序员可以Checkout该段代码了。④软件产品的升级修改工作全部完成后，将受控库中的新基线存入产品库中（软件产品的 版本号更新为V2.2,旧的V2.1版并不删除，继续在产品库中保存）。15、功能配置审计是审计配置项的一致性（配置项的实际功效是否与其需求一致），验证： ①配置项的开发已圆满完成；②配置项已达到配置标识中规定的性能和功能特征；③配置项的操作和支持文档己完成并且是符合要求的。16、物理配置审计是审计配置项的完整性（配置项的物理存在是否与预期一致），验证： ①要交付的配置项是否存在；②配置项中是否包含了所有必需的项目。17、变更分类（1）根据变更性质可分法 重大变更、重要变更和一般变更。通过不同审批权限控制。（2）根据变更的迫切性可分为：紧急变更、非紧急变更。通过不同变更处理流程进行18、信息系统项目鱼，除项目经理和CCB外，通常还会定义变更管理负责人、变更请求者、变更实施者和变更顾问委员会等。 角色 职责 项目经理 项目经理在变更中的作用是:响应变更提出者的需求；评估变更对项目的影响及应对方案；将需求由技术要求转化为资源需求，供授权人决策;并据评审结果实施（即调整基准），确保项目基准反映项目实施情况。 变更管理负责人 也称变更经理，通常是变更管理过程解决方案的负责人，其主要职责包括：①负责整个变更过程方案的结果；②负责变更管理过程的监控；③负责协调相关的资源，保障所有变更按照预定过程顺利运作;④确定变更类型，组织变更计划和日程安排；⑤管理变更的日程安排；⑥变更实施完成之后的回顾和关闭;⑦承担变更相关责任，并且具有相应权限；⑧可能以逐级审批形式或团队会议的形式参与变更的风险评估和审批等。 变更请求者 负责记录与提交变更请求单，具体为:①提交初步的变更方案和计划;②初步评价变更的风险和影响，给变更请求设定适当的变更类型;③对理解变更过程有能力要求等。 变更实施者 需要拥有有执行变更方案的内容的技术能力，负责按照实施计划实施具体的变更任务。 变更顾问委员会 负责对重大变更行使审批，提供专业意见和辅助审批，具体为:①在紧急变更时，其中被授权者行使审批权限;②定期听取变更经理汇报，评估变更管理执行情况，必要时提出改进建议等。 19、变更的流程：①变更申请一②对变更的初审一③变更方案论证一④变更审查一⑤发出通知并实施一⑥实施监控一⑦效果评估一⑧变更收尾；","categories":[{"name":"项目管理","slug":"项目管理","permalink":"https://ciey.top/categories/%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/"}],"tags":[{"name":"案例理论及常见问题","slug":"案例理论及常见问题","permalink":"https://ciey.top/tags/%E6%A1%88%E4%BE%8B%E7%90%86%E8%AE%BA%E5%8F%8A%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"}],"author":"ciey"},{"title":"express全局处理async error","slug":"express-async-error","date":"2019-08-22T10:22:00.000Z","updated":"2025-02-20T08:43:37.239Z","comments":true,"path":"2019/08/22/express-async-error/","permalink":"https://ciey.top/2019/08/22/express-async-error/","excerpt":"","text":"express 结合 async&#x2F;await 可以获得很好的开发体验。一般情况下 async&#x2F;await 在错误处理方面，在最一开始使用Promise时，都习惯用Promise.catch()处理错误，之后async&#x2F;await 流行后，大家习惯用 try/catch 来处理。 123456789router.get(&#x27;/users&#x27;, async (req, res, next) =&gt; &#123; try &#123; const users = await User.findAll(); res.send(users); &#125; catch (err) &#123; logger.error(err.message, err); res.send([]); &#125;&#125;); 这样做本身没什么问题，但是代码中会存在大量重复的 try/catch，能不能将异常全局捕获统一处理呢？ 假设在没有加try/catch的情况下 1234router.get(&#x27;/users&#x27;, async (req, res, next) =&gt; &#123; const users = await User.findAll(); res.send(users);&#125;); 如果User.findAll()报错了， express全局的错误处理并不能直接捕获 Promise 错误。会报一个UnhandledPromiseRejectionWarning错误。 如何解决这个问题，我们先来看一下express错误处理的机制。 express中定义的错误处理中间件函数的定义方式与其他中间件函数基本相同，差别在于错误处理函数有四个自变量而不是三个：(err, req, res, next)： 1234app.use(function(err, req, res, next) &#123; console.error(err.stack); res.status(500).send(&#x27;Something broke!&#x27;);&#125;); 所以exprees中正常处理与错误处理路径是分开的，多了一个err参数。 12app.use((err, req, res, next)=&gt;&#123;&#125;) 对应走 Layer.handle_errorapp.use((req, res, next)=&gt;&#123;&#125;) 对应走 Layer.handle_request 要想express中能够全局捕获Promise对象错误，需要再封装一层用来处理Promise对象。 123456789const asyncHandler = fn =&gt; (req, res, next) =&gt; Promise.resolve() .then(() =&gt; fn(req, res, next)) .catch(next);router.get(&#x27;/users&#x27;, asyncHandler(async (req, res) =&gt; &#123; const users = await User.findAll(); res.send(users);&#125;)); asyncHandler会将Promise中错误通过catch()捕获并交给 next，这样就会去到 express 全局错误中间件中。 但如果在每个路由请求中都增加这个捕获异常的asyncHandler函数跟在每个中都加 try/catch本质上没多大区别。而且代码看上去也复杂。 还有一种更简便的方法，使用express-async-errors。原理是： 123This is a very minimalistic and unintrusive hack. Instead of patching all methods on an express Router, it wraps the Layer#handle property in one place, leaving all the rest of the express guts intact. 翻译：这是一种非常简约而且没有入侵性的hack方式。代替了在每个express路由方法中打补丁的方式，它通过复写express中Layer#handle方法，把每个Routing Function的错误统一用 next(err) 传递。 用法也很简单，在express后引入require(‘express-async-errors’)，就可以在express错误处理中捕获错误了。 1234567891011// error handleapp.use((err, req, res, next) =&gt; &#123; logger.error(err.message, err); if (req.xhr) &#123; return res.json(&#123; state: false, msg: err.message &#125;); &#125; next(err);&#125;);","categories":[{"name":"web开发","slug":"web开发","permalink":"https://ciey.top/categories/web%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"node.js","slug":"node-js","permalink":"https://ciey.top/tags/node-js/"},{"name":"express","slug":"express","permalink":"https://ciey.top/tags/express/"}],"author":"ciey"},{"title":"node实现后台权限管理系统","slug":"node-express-admin","date":"2019-08-21T02:22:00.000Z","updated":"2025-02-20T08:43:43.961Z","comments":true,"path":"2019/08/21/node-express-admin/","permalink":"https://ciey.top/2019/08/21/node-express-admin/","excerpt":"","text":"本文面向的是node初学者，目标是搭建一个基础的后台权限系统。使用的node框架是上手最简单的express，模板是ejs，这些在node入门的书籍中都有介绍说明，所以应该是难度较低的。 对于node初学者来说，可以先尝试搭建一个blog，单用户的或者多用户的都可以。cnodejs论坛是我学的第一个源码，还是很经典的。但是由于开发比较早，基于nodev4版本，很多后面新加的特性都未使用，比如class，async&#x2F;await语法等。随着node版本的大幅升级，目前至少是基于nodev8，稳定的是nodev10版本开发。所以本系列教程node版本至少是8版本，推荐装LTS 10版本。 ide强烈推荐速度最快，使用最流畅的Visual Studio Code。它也是基于node的electron实现的，一级棒。 数据库用过MS SQLServer、MySQL、mongodb，其中mongodb好多node教程推荐使用才开始流行，但它并非关系型数据库，所以综合考虑还是选用MySQL。数据库客户端推荐Navicat Premium。 以上各环境的安装准备工作大家可以自行教程，不在展开说明了。 说下此项目的目标是搭建一个后台权限管理系统。对于实际项目的业务开发，后台的基础权限框架必不可少。本教程将会带你如何设计用户、角色、菜单、及权限控制，并通过代码示例实现。 如何定义一个好的框架，没有一个标准。主要看每个人的水平及项目的适用性。以前从事.net开发，学设计模式、封装、Ioc注入等，好固然是好，但也提高了入门的门槛，想要让一个初学者快速上手进行业务开发却很难。因为封装后的代码可读性变差，如果没有一定水平框架也很难维护。还有就是如果一个项目比较小，那么在设计框架时分层分个5、6层就有点过头了，一般3层MVC就够用了。当然如果你在大型互联网公司，接触到的用户数量是几万甚至几十万，业务也很多，那框架就势必要考虑到很多方面的问题，那架构设计就不是那么简简单单的了，可能会涉及到分布式、微服务等。 我们可以先从基础的简单的框架入手，等经验丰富了后再不断的重构升级以应对日益增长的业务需求。 下面我们来开始设计并搭建框架。 最基础的权限是用户的登录，通过用户名和密码跟数据库匹配来判断是否登录成功。 用户登录并存入session后，下次只需判断session中用户是否存在，可以写在express中间件中。 123456789101112/** 权限判断中间件*/class authMiddleware &#123; /** 需要用户登录*/ async loginRequired(req, res, next) &#123; if (!req.session || !req.session.user || !req.session.user.id) &#123; return res.redirect(&#x27;/login&#x27;); &#125; await next(); &#125;&#125;module.exports = new authMiddleware(); 然后在每次请求的路由中，先判断下用户是否已登录，然后再执行相应controller。 123456789const router = require(&#x27;express&#x27;).Router(), auth = require(&#x27;./middleware/auth&#x27;), login = require(&#x27;./controller/login&#x27;), main = require(&#x27;./controller/main&#x27;);router.get(&#x27;/login&#x27;, login.showLogin);router.post(&#x27;/login&#x27;, login.login);router.get(&#x27;/main&#x27;, auth.loginRequired, main.showMain); 其中登录页面及登录post提交是不需要检查session中有无用户的，因为用户这时候还没登录成功。但是像主页&#x2F;main设定的是需要用户登录才能查看的。 登录后的后台管理系统布局一般都是左侧是菜单树，右侧为内容。 很显然左侧的菜单需要权限控制，用于区分哪些菜单(页面)用户可以访问，哪些菜单(页面)用户不可以访问。一般不能访问的菜单(页面)不显示给用户，这样不同的用户登录后显示的左侧菜单是不相同的。 可以从图上看到，在原来的登录的基础上增加了菜单表和用户菜单表，一个用户可以对应有多个菜单。那么他在登录后就获得了相应的菜单集合，在页面左侧加载即可。 对于那些在界面上没显示的菜单在后台路由中也是要检查下权限的，要不然像用户管理&#x2F;userList这条路由虽然没有配给某个测试账号，但他可以直接在地址栏输入&#x2F;userList进行访问。所以在Middleware中需要增加判断用户是否有此page_url的访问权限。 123456789101112131415161718192021222324/** 需要用户菜单权限*/ async userPermission(req, res, next) &#123; //先判断用户session if (!req.session || !req.session.user || !req.session.user.id) &#123; return res.redirect(&#x27;/login&#x27;); &#125; let hasPower = false; //userMenu指当前用户拥有的菜单集合，请自行db查询 userMenu.forEach(el =&gt; &#123; if (el.page_url == req.route.path) &#123; hasPower = true; &#125; &#125;); if (!hasPower) &#123; if (req.xhr) &#123; return res.json(&#123; state: false, msg: &quot;抱歉，您无此权限！请联系管理员&quot; &#125;); &#125; return res.send(&#x27;抱歉，您无此权限！请联系管理员&#x27;); &#125; next(); &#125; 路由中增加中间件的执行 1router.get(&#x27;/userList&#x27;, auth.userPermission, main.showUser); 这样当浏览器请求&#x2F;userList路由时，先执行中间件userPermission方法，判断用户是否拥有此url权限，如果hasPower为false，即没有权限，直接返回输出。如果有权限，再执行相应controller中方法。 至此，基本的用户登录，及用户菜单权限已设计完成。但如果需要进一步权限控制到页面中的按钮、对用户进行分组设置权限等，还得再进行补充完善。 按钮（控件）上面权限系统控制到了页面，如果页面中不同用户操作按钮（控件）权限需要区分，比如常见的增、删、改操作，还需要进一步权限设计。 页面列表数据查看、新增、修改、删除等各种操作，都需要通过ajax将数据或参数提交给对应的接口，然后接口再将结果返回，所以我们可以通过限制接口的访问来做到对页面按键功能的控制。 可以把各种按钮也看成是菜单项，对前面的菜单表进行扩充，增加（控件地址、是否显示）两个字段即可。 其中控件地址这个字段，就是我们访问接口数据的路由地址，比如说获取单个订单数据是通过指定主键id，它的路由接口一般设计成’&#x2F;api&#x2F;user&#x2F;:id’。这些路由地址是我们自己设计且在整个项目中都是唯一的。所以在开发时，我们可以在后台做个中间件拦截，通过用户是否有这个菜单项对应的接口路由地址，来判断用户是否有访问该接口的权限。 是否显示字段，是为了在输出菜单列表时将这些按钮菜单项隐藏，不在界面中显示出来。 角色（职位）当系统中用户增多，对每一个用户都需要单独设置权限这种重复劳动工作量增大的时候，势必要考虑用户组了，在我们windows系统中早就有用户组的概念了。有了用户组概念，就可以先设置好某个用户组的权限，然后对于新加进来的用户只需加入之前配置好的用户组中，即新加进来的用户就拥有了用户组的权限。 考虑到现实情况，一个公司或企业的组织架构通常是有很多个部门组成，部门下面会有相应的职位，比如部门经理、部门员工等。用职位代替角色或用户组更让人能够容易理解。不同的职位有不同的工作职责，也有不同的操作权限。而部门主要是为了方便对职位进行分组管理，如果职位多时没有对应的分组，查询不方便，如果有相似的职位，也容易混淆。 对于企业来说，人员由于流动关系可能会经常变化，而职位则相对来说是比较固定的，所以权限绑定职位更合适，而不权限直接绑定用户。当一位员工更换岗位时，只需要更改他所绑定的职位，对于新入职的员工，也只需要绑定他所入职岗位，他们就可以拥有该职位的所有权限。 当然也会存在一些特殊的需要，比如说某人与同事都隶属于同一个职位，但他是老员工可以拥有更多的权限，这时可以增加一个新职位（通过制定职位级别）来区分他们的权限。 又比如说，如果权限需要限制部门访问权限，而该部门内的职位只能设置当前部门对应的权限，如果有员工需要跨部门拥有其他权限时，可以通过更改用户账号绑定多职位的方式来实现，也就是说一个员工他只可以绑定一个主部门，但他可以同时拥有多个职位，这样它的权限就是多个职位权限的集合。 这样在数据库表设计中需要调整的是新加入职位表（职位id、职位名称、部门id、菜单权限）和部门表（部门id、部门名称、部门编码、上一级部门id），并在用户表中增加职位id、部门id。 职位表是绑定在部门下的权限角色，菜单权限字段直接与菜单项进行关联，不同职位可以设置不同的权限（设置可查看与操作的菜单项） 职位表还需要存储与部门表的关联项：部门表id。如果为了不关联查询，也可以直接冗余存储部门编码、和部门名称字段（直接存储这个冗余字段，是为在需要显示职位所属部门时，不需要从部门表中关联查询，部门名称设置后更改的机会不大，但查询是每次都固定需要查询），所以冗余字段的设置减少了查询表次数，不过要在程序中确保两边表的数据更新一致。 部门表它相当于权限分组，可以根据企业的部门结构，创建对应的结构记录，这样也方便企业对系统权限关系更加容易理解。当然也可以根据需要设置虚拟部门出来管理。 为了以后扩展需要，需要添加部门编码字段，编码从01开始一直累加到99，当然如果部门超过99个的话，要么增加到3位数，要么当前框架已不能支持业务的发展需要思考新的架构了。 编码每增加一级，在01后面自动增加”0x“，编码的长度跟部门分级深度相关。 综合以上权限设计思路，最终整理出的数据表关系图为： 整个权限控制就4张表，如果现实情况不太用得到组织部门，还可以把部门这张表去掉，并把职位表改成角色表，这样最精简的权限控制数据库表就设计完成了。 上一节主要讲了后台数据库表的设计，这节主要根据4张表来设计界面，主要有用户管理页面、菜单管理页面、部门管理页面、职位管理页面。 前端采用inspinia模板，有些插件略有增减，对话框采用layer，树菜单采用ztree，表格采用bootstrap-table，具体可以看源码。express中采用ejs-mate模板，是ejs扩展版本，支持layout。 用户管理列表 编辑用户编辑用户中主要选择用户所属部门和职位，其中职位是可以多个，采用树型结构勾选即可。 菜单管理列表菜单列表采用bootstrap-table，并使用tree-grid插件显示菜单层级关系。 编辑菜单编辑菜单主要是设置上下级菜单关系，页面地址和控件地址，如果这个菜单只有控件地址，不在左侧树菜单显示的，需要将是否显示设为隐藏。 部门管理列表 职位管理列表左侧可以通过点击部门树，来筛选该部门下的职位列表，方便显示。 编辑职位编辑职位主要设置该职位名称及该职位所拥有的菜单项，菜单项是一个树型结构，打勾即表示该职位拥护此菜单项权限。 以上是最终所实现的界面效果。大部分都属于简单的列表和增删改页面，稍微复杂点是有些页面会涉及到树形菜单加载。 用户登录后，就获得了用户所属职位的菜单项集合，在用户每次请求路由中需增加权限判断，我们写在中间件中。 12345678910111213141516171819202122232425262728/** 用户鉴权*/async authUserPermission(req, res, next) &#123; if (!req.session || !req.session.user || !req.session.user.id) &#123; return res.redirect(&#x27;/login&#x27;); &#125; if (!req.session || !req.session.menu || req.session.menu.length == 0) &#123; return res.send(&#x27;抱歉，您无此权限！请联系管理员&#x27;); &#125; let targetUrl = req.route.path; let hasPower = false; req.session.menu.forEach(el =&gt; &#123; if (el.page_url == targetUrl || el.control_url == targetUrl) &#123; hasPower = true; &#125; &#125;); if (!hasPower) &#123; if (req.xhr) &#123; return res.json(&#123; state: false, msg: &quot;抱歉，您无此权限！请联系管理员&quot; &#125;); &#125; return res.send(&#x27;抱歉，您无此权限！请联系管理员&#x27;); &#125; next();&#125; 在每次路由请求中先判断用户权限，如有权限则往下执行正常逻辑，如无权限直接返回。 12router.get(&#x27;/system/userList&#x27;, auth.authUserPermission, system.showUserList);router.get(&#x27;/system/userEdit/:id&#x27;, auth.authUserPermission, system.showUserEdit); test账号新增用户报无权限演示： 项目地址：https://github.com/ciey/NodeExpressAdmin","categories":[{"name":"web开发","slug":"web开发","permalink":"https://ciey.top/categories/web%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"node.js","slug":"node-js","permalink":"https://ciey.top/tags/node-js/"},{"name":"express","slug":"express","permalink":"https://ciey.top/tags/express/"}],"author":"ciey"},{"title":"Adminer轻量级MySQL管理工具","slug":"adminer-install","date":"2018-12-24T05:35:00.000Z","updated":"2025-02-20T08:43:33.040Z","comments":true,"path":"2018/12/24/adminer-install/","permalink":"https://ciey.top/2018/12/24/adminer-install/","excerpt":"","text":"Adminer工具名称：Adminer 工具作用：图形化MySQL管理工具 工具下载： https://www.adminer.org/ Why is Adminer better than phpMyAdmin? 优势：1. 安全, 2. 用户体验更好, 3. 性能更好, 4. 支持特性更多, 5. 最小体积，单个文件. 附Adminer与phpMyAdmin的对比https://www.adminer.org/en/phpmyadmin/ Apache 安装1$ sudo apt-get install apache2 php 安装12$ sudo apt-get install php7.0$ sudo apt-get install libapache2-mod-php7.0 mysql 另行安装，不在赘述1$ sudo apt-get install mysql-server mysql-client php扩展安装1$ sudo apt-get install php7.0-mysql adminer安装下载adminer.php至&#x2F;var&#x2F;www&#x2F;html 12$ cd /var/www/html$ sudo wget &quot;http://www.adminer.org/latest.php&quot; -O adminer.php 重启Apache 1$ sudo /etc/init.d/apache2 restart 重载Apache配置 1$ sudo systemctl reload apache2","categories":[{"name":"常用工具","slug":"常用工具","permalink":"https://ciey.top/categories/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"Adminer","slug":"Adminer","permalink":"https://ciey.top/tags/Adminer/"},{"name":"MySQL","slug":"MySQL","permalink":"https://ciey.top/tags/MySQL/"}],"author":"ciey"},{"title":"Hello Hexo","slug":"hello-hexo","date":"2018-10-23T07:25:00.000Z","updated":"2025-02-20T08:43:10.662Z","comments":true,"path":"2018/10/23/hello-hexo/","permalink":"https://ciey.top/2018/10/23/hello-hexo/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[{"name":"web开发","slug":"web开发","permalink":"https://ciey.top/categories/web%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://ciey.top/tags/hexo/"}],"author":"ciey"}],"categories":[{"name":"项目管理","slug":"项目管理","permalink":"https://ciey.top/categories/%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/"},{"name":"web开发","slug":"web开发","permalink":"https://ciey.top/categories/web%E5%BC%80%E5%8F%91/"},{"name":"常用工具","slug":"常用工具","permalink":"https://ciey.top/categories/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"风险管理","slug":"风险管理","permalink":"https://ciey.top/tags/%E9%A3%8E%E9%99%A9%E7%AE%A1%E7%90%86/"},{"name":"资源管理","slug":"资源管理","permalink":"https://ciey.top/tags/%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86/"},{"name":"案例理论及常见问题","slug":"案例理论及常见问题","permalink":"https://ciey.top/tags/%E6%A1%88%E4%BE%8B%E7%90%86%E8%AE%BA%E5%8F%8A%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"},{"name":"node.js","slug":"node-js","permalink":"https://ciey.top/tags/node-js/"},{"name":"express","slug":"express","permalink":"https://ciey.top/tags/express/"},{"name":"Adminer","slug":"Adminer","permalink":"https://ciey.top/tags/Adminer/"},{"name":"MySQL","slug":"MySQL","permalink":"https://ciey.top/tags/MySQL/"},{"name":"hexo","slug":"hexo","permalink":"https://ciey.top/tags/hexo/"}]}